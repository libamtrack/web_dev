/*! For license information please see libat.js.LICENSE.txt */
var key,Module=void 0!==Module?Module:{},moduleOverrides={};for(key in Module)Module.hasOwnProperty(key)&&(moduleOverrides[key]=Module[key]);var arguments_=[],thisProgram="./this.program",quit_=function(e,t){throw t},ENVIRONMENT_IS_WEB=!1,ENVIRONMENT_IS_WORKER=!1,ENVIRONMENT_IS_NODE=!1,ENVIRONMENT_IS_SHELL=!1;if(ENVIRONMENT_IS_WEB="object"==typeof window,ENVIRONMENT_IS_WORKER="function"==typeof importScripts,ENVIRONMENT_IS_NODE="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER,Module.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");var read_,readAsync,readBinary,setWindowTitle,nodeFS,nodePath,scriptDirectory="";function locateFile(e){return Module.locateFile?Module.locateFile(e,scriptDirectory):scriptDirectory+e}if(ENVIRONMENT_IS_NODE)scriptDirectory=ENVIRONMENT_IS_WORKER?require("path").dirname(scriptDirectory)+"/":__dirname+"/",read_=function(e,t){return nodeFS||(nodeFS=require("fs")),nodePath||(nodePath=require("path")),e=nodePath.normalize(e),nodeFS.readFileSync(e,t?null:"utf8")},readBinary=function(e){var t=read_(e,!0);return t.buffer||(t=new Uint8Array(t)),assert(t.buffer),t},process.argv.length>1&&(thisProgram=process.argv[1].replace(/\\/g,"/")),arguments_=process.argv.slice(2),"undefined"!=typeof module&&(module.exports=Module),process.on("uncaughtException",(function(e){if(!(e instanceof ExitStatus))throw e})),process.on("unhandledRejection",abort),quit_=function(e){process.exit(e)},Module.inspect=function(){return"[Emscripten Module object]"};else if(ENVIRONMENT_IS_SHELL)"undefined"!=typeof read&&(read_=function(e){return read(e)}),readBinary=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(assert("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?arguments_=scriptArgs:"undefined"!=typeof arguments&&(arguments_=arguments),"function"==typeof quit&&(quit_=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print);else{if(!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER)throw new Error("environment detection error");ENVIRONMENT_IS_WORKER?scriptDirectory=self.location.href:document.currentScript&&(scriptDirectory=document.currentScript.src),scriptDirectory=0!==scriptDirectory.indexOf("blob:")?scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1):"",read_=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},ENVIRONMENT_IS_WORKER&&(readBinary=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),readAsync=function(e,t,i){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):i()},r.onerror=i,r.send(null)},setWindowTitle=function(e){document.title=e}}var out=Module.print||console.log.bind(console),err=Module.printErr||console.warn.bind(console);for(key in moduleOverrides)moduleOverrides.hasOwnProperty(key)&&(Module[key]=moduleOverrides[key]);moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Object.getOwnPropertyDescriptor(Module,"arguments")||Object.defineProperty(Module,"arguments",{configurable:!0,get:function(){abort("Module.arguments has been replaced with plain arguments_")}}),Module.thisProgram&&(thisProgram=Module.thisProgram),Object.getOwnPropertyDescriptor(Module,"thisProgram")||Object.defineProperty(Module,"thisProgram",{configurable:!0,get:function(){abort("Module.thisProgram has been replaced with plain thisProgram")}}),Module.quit&&(quit_=Module.quit),Object.getOwnPropertyDescriptor(Module,"quit")||Object.defineProperty(Module,"quit",{configurable:!0,get:function(){abort("Module.quit has been replaced with plain quit_")}}),assert(void 0===Module.memoryInitializerPrefixURL,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),assert(void 0===Module.pthreadMainPrefixURL,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),assert(void 0===Module.cdInitializerPrefixURL,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),assert(void 0===Module.filePackagePrefixURL,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),assert(void 0===Module.read,"Module.read option was removed (modify read_ in JS)"),assert(void 0===Module.readAsync,"Module.readAsync option was removed (modify readAsync in JS)"),assert(void 0===Module.readBinary,"Module.readBinary option was removed (modify readBinary in JS)"),assert(void 0===Module.setWindowTitle,"Module.setWindowTitle option was removed (modify setWindowTitle in JS)"),assert(void 0===Module.TOTAL_MEMORY,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),Object.getOwnPropertyDescriptor(Module,"read")||Object.defineProperty(Module,"read",{configurable:!0,get:function(){abort("Module.read has been replaced with plain read_")}}),Object.getOwnPropertyDescriptor(Module,"readAsync")||Object.defineProperty(Module,"readAsync",{configurable:!0,get:function(){abort("Module.readAsync has been replaced with plain readAsync")}}),Object.getOwnPropertyDescriptor(Module,"readBinary")||Object.defineProperty(Module,"readBinary",{configurable:!0,get:function(){abort("Module.readBinary has been replaced with plain readBinary")}}),Object.getOwnPropertyDescriptor(Module,"setWindowTitle")||Object.defineProperty(Module,"setWindowTitle",{configurable:!0,get:function(){abort("Module.setWindowTitle has been replaced with plain setWindowTitle")}});var IDBFS="IDBFS is no longer included by default; build with -lidbfs.js",PROXYFS="PROXYFS is no longer included by default; build with -lproxyfs.js",WORKERFS="WORKERFS is no longer included by default; build with -lworkerfs.js",NODEFS="NODEFS is no longer included by default; build with -lnodefs.js",STACK_ALIGN=16;function staticAlloc(e){abort("staticAlloc is no longer available at runtime; instead, perform static allocations at compile time (using makeStaticAlloc)")}function dynamicAlloc(e){assert(DYNAMICTOP_PTR);var t=HEAP32[DYNAMICTOP_PTR>>2],i=t+e+15&-16;return assert(i<=HEAP8.length,"failure to dynamicAlloc - memory growth etc. is not supported there, call malloc/sbrk directly"),HEAP32[DYNAMICTOP_PTR>>2]=i,t}function alignMemory(e,t){return t||(t=STACK_ALIGN),Math.ceil(e/t)*t}function getNativeTypeSize(e){switch(e){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:if("*"===e[e.length-1])return 4;if("i"===e[0]){var t=Number(e.substr(1));return assert(t%8==0,"getNativeTypeSize invalid bits "+t+", type "+e),t/8}return 0}}function warnOnce(e){warnOnce.shown||(warnOnce.shown={}),warnOnce.shown[e]||(warnOnce.shown[e]=1,err(e))}function convertJsFunctionToWasm(e,t){if("function"==typeof WebAssembly.Function){for(var i={i:"i32",j:"i64",f:"f32",d:"f64"},r={parameters:[],results:"v"==t[0]?[]:[i[t[0]]]},n=1;n<t.length;++n)r.parameters.push(i[t[n]]);return new WebAssembly.Function(r,e)}var a=[1,0,1,96],o=t.slice(0,1),_=t.slice(1),s={i:127,j:126,f:125,d:124};for(a.push(_.length),n=0;n<_.length;++n)a.push(s[_[n]]);"v"==o?a.push(0):a=a.concat([1,s[o]]),a[1]=a.length-2;var u=new Uint8Array([0,97,115,109,1,0,0,0].concat(a,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),l=new WebAssembly.Module(u);return new WebAssembly.Instance(l,{e:{f:e}}).exports.f}stackSave=stackRestore=stackAlloc=function(){abort("cannot use the stack before compiled code is ready to run, and has provided stack access")};var functionsInTableMap,freeTableIndexes=[];function addFunctionWasm(e,t){var i,r=wasmTable;if(!functionsInTableMap){functionsInTableMap=new WeakMap;for(var n=0;n<r.length;n++){var a=r.get(n);a&&functionsInTableMap.set(a,n)}}if(functionsInTableMap.has(e))return functionsInTableMap.get(e);if(freeTableIndexes.length)i=freeTableIndexes.pop();else{i=r.length;try{r.grow(1)}catch(e){if(!(e instanceof RangeError))throw e;throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH."}}try{r.set(i,e)}catch(n){if(!(n instanceof TypeError))throw n;assert(void 0!==t,"Missing signature argument to addFunction");var o=convertJsFunctionToWasm(e,t);r.set(i,o)}return functionsInTableMap.set(e,i),i}function removeFunctionWasm(e){functionsInTableMap.delete(wasmTable.get(e)),freeTableIndexes.push(e)}function addFunction(e,t){return assert(void 0!==e),addFunctionWasm(e,t)}function removeFunction(e){removeFunctionWasm(e)}var funcWrappers={};function getFuncWrapper(e,t){if(e){assert(t),funcWrappers[t]||(funcWrappers[t]={});var i=funcWrappers[t];return i[e]||(1===t.length?i[e]=function(){return dynCall(t,e)}:2===t.length?i[e]=function(i){return dynCall(t,e,[i])}:i[e]=function(){return dynCall(t,e,Array.prototype.slice.call(arguments))}),i[e]}}function makeBigInt(e,t,i){return i?+(e>>>0)+4294967296*+(t>>>0):+(e>>>0)+4294967296*+(0|t)}function dynCall(e,t,i){return i&&i.length?(assert(i.length===e.substring(1).replace(/j/g,"--").length),assert("dynCall_"+e in Module,"bad function pointer type - no table for sig '"+e+"'"),Module["dynCall_"+e].apply(null,[t].concat(i))):(assert(1==e.length),assert("dynCall_"+e in Module,"bad function pointer type - no table for sig '"+e+"'"),Module["dynCall_"+e].call(null,t))}var tempRet0=0,setTempRet0=function(e){tempRet0=e},getTempRet0=function(){return tempRet0};function getCompilerSetting(e){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work"}var wasmBinary,noExitRuntime,wasmMemory,GLOBAL_BASE=1024;function setValue(e,t,i,r){switch("*"===(i=i||"i8").charAt(i.length-1)&&(i="i32"),i){case"i1":case"i8":HEAP8[e>>0]=t;break;case"i16":HEAP16[e>>1]=t;break;case"i32":HEAP32[e>>2]=t;break;case"i64":tempI64=[t>>>0,(tempDouble=t,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[e>>2]=tempI64[0],HEAP32[e+4>>2]=tempI64[1];break;case"float":HEAPF32[e>>2]=t;break;case"double":HEAPF64[e>>3]=t;break;default:abort("invalid type for setValue: "+i)}}function getValue(e,t,i){switch("*"===(t=t||"i8").charAt(t.length-1)&&(t="i32"),t){case"i1":case"i8":return HEAP8[e>>0];case"i16":return HEAP16[e>>1];case"i32":case"i64":return HEAP32[e>>2];case"float":return HEAPF32[e>>2];case"double":return HEAPF64[e>>3];default:abort("invalid type for getValue: "+t)}return null}Module.wasmBinary&&(wasmBinary=Module.wasmBinary),Object.getOwnPropertyDescriptor(Module,"wasmBinary")||Object.defineProperty(Module,"wasmBinary",{configurable:!0,get:function(){abort("Module.wasmBinary has been replaced with plain wasmBinary")}}),Module.noExitRuntime&&(noExitRuntime=Module.noExitRuntime),Object.getOwnPropertyDescriptor(Module,"noExitRuntime")||Object.defineProperty(Module,"noExitRuntime",{configurable:!0,get:function(){abort("Module.noExitRuntime has been replaced with plain noExitRuntime")}}),"object"!=typeof WebAssembly&&abort("No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.");var wasmTable=new WebAssembly.Table({initial:70,maximum:70,element:"anyfunc"}),ABORT=!1,EXITSTATUS=0;function assert(e,t){e||abort("Assertion failed: "+t)}function getCFunc(e){var t=Module["_"+e];return assert(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function ccall(e,t,i,r,n){var a={string:function(e){var t=0;if(null!=e&&0!==e){var i=1+(e.length<<2);stringToUTF8(e,t=stackAlloc(i),i)}return t},array:function(e){var t=stackAlloc(e.length);return writeArrayToMemory(e,t),t}},o=getCFunc(e),_=[],s=0;if(assert("array"!==t,'Return type should not be "array".'),r)for(var u=0;u<r.length;u++){var l=a[i[u]];l?(0===s&&(s=stackSave()),_[u]=l(r[u])):_[u]=r[u]}var d=o.apply(null,_);return d=function(e){return"string"===t?UTF8ToString(e):"boolean"===t?Boolean(e):e}(d),0!==s&&stackRestore(s),d}function cwrap(e,t,i,r){return function(){return ccall(e,t,i,arguments,r)}}var ALLOC_NORMAL=0,ALLOC_STACK=1,ALLOC_DYNAMIC=2,ALLOC_NONE=3;function allocate(e,t,i,r){var n,a;"number"==typeof e?(n=!0,a=e):(n=!1,a=e.length);var o,_="string"==typeof t?t:null;if(o=i==ALLOC_NONE?r:[_malloc,stackAlloc,dynamicAlloc][i](Math.max(a,_?1:t.length)),n){var s;for(r=o,assert(0==(3&o)),s=o+(-4&a);r<s;r+=4)HEAP32[r>>2]=0;for(s=o+a;r<s;)HEAP8[r++>>0]=0;return o}if("i8"===_)return e.subarray||e.slice?HEAPU8.set(e,o):HEAPU8.set(new Uint8Array(e),o),o;for(var u,l,d,m=0;m<a;){var c=e[m];0!==(u=_||t[m])?(assert(u,"Must know what type to store in allocate!"),"i64"==u&&(u="i32"),setValue(o+m,c,u),d!==u&&(l=getNativeTypeSize(u),d=u),m+=l):m++}return o}function getMemory(e){return runtimeInitialized?_malloc(e):dynamicAlloc(e)}var UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function UTF8ArrayToString(e,t,i){for(var r=t+i,n=t;e[n]&&!(n>=r);)++n;if(n-t>16&&e.subarray&&UTF8Decoder)return UTF8Decoder.decode(e.subarray(t,n));for(var a="";t<n;){var o=e[t++];if(128&o){var _=63&e[t++];if(192!=(224&o)){var s=63&e[t++];if(224==(240&o)?o=(15&o)<<12|_<<6|s:(240!=(248&o)&&warnOnce("Invalid UTF-8 leading byte 0x"+o.toString(16)+" encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!"),o=(7&o)<<18|_<<12|s<<6|63&e[t++]),o<65536)a+=String.fromCharCode(o);else{var u=o-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&o)<<6|_)}else a+=String.fromCharCode(o)}return a}function UTF8ToString(e,t){return e?UTF8ArrayToString(HEAPU8,e,t):""}function stringToUTF8Array(e,t,i,r){if(!(r>0))return 0;for(var n=i,a=i+r-1,o=0;o<e.length;++o){var _=e.charCodeAt(o);if(_>=55296&&_<=57343&&(_=65536+((1023&_)<<10)|1023&e.charCodeAt(++o)),_<=127){if(i>=a)break;t[i++]=_}else if(_<=2047){if(i+1>=a)break;t[i++]=192|_>>6,t[i++]=128|63&_}else if(_<=65535){if(i+2>=a)break;t[i++]=224|_>>12,t[i++]=128|_>>6&63,t[i++]=128|63&_}else{if(i+3>=a)break;_>=2097152&&warnOnce("Invalid Unicode code point 0x"+_.toString(16)+" encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF)."),t[i++]=240|_>>18,t[i++]=128|_>>12&63,t[i++]=128|_>>6&63,t[i++]=128|63&_}}return t[i]=0,i-n}function stringToUTF8(e,t,i){return assert("number"==typeof i,"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),stringToUTF8Array(e,HEAPU8,t,i)}function lengthBytesUTF8(e){for(var t=0,i=0;i<e.length;++i){var r=e.charCodeAt(i);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++i)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function AsciiToString(e){for(var t="";;){var i=HEAPU8[e++>>0];if(!i)return t;t+=String.fromCharCode(i)}}function stringToAscii(e,t){return writeAsciiToMemory(e,t,!1)}var UTF16Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function UTF16ToString(e){assert(e%2==0,"Pointer passed to UTF16ToString must be aligned to two bytes!");for(var t=e,i=t>>1;HEAP16[i];)++i;if((t=i<<1)-e>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(e,t));for(var r=0,n="";;){var a=HEAP16[e+2*r>>1];if(0==a)return n;++r,n+=String.fromCharCode(a)}}function stringToUTF16(e,t,i){if(assert(t%2==0,"Pointer passed to stringToUTF16 must be aligned to two bytes!"),assert("number"==typeof i,"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===i&&(i=2147483647),i<2)return 0;for(var r=t,n=(i-=2)<2*e.length?i/2:e.length,a=0;a<n;++a){var o=e.charCodeAt(a);HEAP16[t>>1]=o,t+=2}return HEAP16[t>>1]=0,t-r}function lengthBytesUTF16(e){return 2*e.length}function UTF32ToString(e){assert(e%4==0,"Pointer passed to UTF32ToString must be aligned to four bytes!");for(var t=0,i="";;){var r=HEAP32[e+4*t>>2];if(0==r)return i;if(++t,r>=65536){var n=r-65536;i+=String.fromCharCode(55296|n>>10,56320|1023&n)}else i+=String.fromCharCode(r)}}function stringToUTF32(e,t,i){if(assert(t%4==0,"Pointer passed to stringToUTF32 must be aligned to four bytes!"),assert("number"==typeof i,"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===i&&(i=2147483647),i<4)return 0;for(var r=t,n=r+i-4,a=0;a<e.length;++a){var o=e.charCodeAt(a);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),HEAP32[t>>2]=o,(t+=4)+4>n)break}return HEAP32[t>>2]=0,t-r}function lengthBytesUTF32(e){for(var t=0,i=0;i<e.length;++i){var r=e.charCodeAt(i);r>=55296&&r<=57343&&++i,t+=4}return t}function allocateUTF8(e){var t=lengthBytesUTF8(e)+1,i=_malloc(t);return i&&stringToUTF8Array(e,HEAP8,i,t),i}function allocateUTF8OnStack(e){var t=lengthBytesUTF8(e)+1,i=stackAlloc(t);return stringToUTF8Array(e,HEAP8,i,t),i}function writeStringToMemory(e,t,i){var r,n;warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!"),i&&(n=t+lengthBytesUTF8(e),r=HEAP8[n]),stringToUTF8(e,t,1/0),i&&(HEAP8[n]=r)}function writeArrayToMemory(e,t){assert(e.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)"),HEAP8.set(e,t)}function writeAsciiToMemory(e,t,i){for(var r=0;r<e.length;++r)assert(e.charCodeAt(r)==e.charCodeAt(r)&255),HEAP8[t++>>0]=e.charCodeAt(r);i||(HEAP8[t>>0]=0)}var HEAP,buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64,PAGE_SIZE=16384,WASM_PAGE_SIZE=65536,ASMJS_PAGE_SIZE=16777216;function alignUp(e,t){return e%t>0&&(e+=t-e%t),e}function updateGlobalBufferAndViews(e){buffer=e,Module.HEAP8=HEAP8=new Int8Array(e),Module.HEAP16=HEAP16=new Int16Array(e),Module.HEAP32=HEAP32=new Int32Array(e),Module.HEAPU8=HEAPU8=new Uint8Array(e),Module.HEAPU16=HEAPU16=new Uint16Array(e),Module.HEAPU32=HEAPU32=new Uint32Array(e),Module.HEAPF32=HEAPF32=new Float32Array(e),Module.HEAPF64=HEAPF64=new Float64Array(e)}var STATIC_BASE=1024,STACK_BASE=6544544,STACKTOP=STACK_BASE,STACK_MAX=1301664,DYNAMIC_BASE=6544544,DYNAMICTOP_PTR=1301504;assert(STACK_BASE%16==0,"stack must start aligned"),assert(DYNAMIC_BASE%16==0,"heap must start aligned");var TOTAL_STACK=5242880;Module.TOTAL_STACK&&assert(TOTAL_STACK===Module.TOTAL_STACK,"the stack size can no longer be determined at runtime");var INITIAL_INITIAL_MEMORY=Module.INITIAL_MEMORY||16777216;function writeStackCookie(){assert(0==(3&STACK_MAX)),HEAPU32[1+(STACK_MAX>>2)]=34821223,HEAPU32[2+(STACK_MAX>>2)]=2310721022,HEAP32[0]=1668509029}function checkStackCookie(){var e=HEAPU32[1+(STACK_MAX>>2)],t=HEAPU32[2+(STACK_MAX>>2)];34821223==e&&2310721022==t||abort("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x"+t.toString(16)+" "+e.toString(16)),1668509029!==HEAP32[0]&&abort("Runtime error: The application has corrupted its heap memory area (address zero)!")}function abortStackOverflow(e){abort("Stack overflow! Attempted to allocate "+e+" bytes on the stack, but stack has only "+(STACK_MAX-stackSave()+e)+" bytes available!")}function abortFnPtrError(e,t){abort("Invalid function pointer "+e+" called with signature '"+t+"'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.")}function callRuntimeCallbacks(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var i=t.func;"number"==typeof i?void 0===t.arg?Module.dynCall_v(i):Module.dynCall_vi(i,t.arg):i(void 0===t.arg?null:t.arg)}else t(Module)}}Object.getOwnPropertyDescriptor(Module,"INITIAL_MEMORY")||Object.defineProperty(Module,"INITIAL_MEMORY",{configurable:!0,get:function(){abort("Module.INITIAL_MEMORY has been replaced with plain INITIAL_INITIAL_MEMORY")}}),assert(INITIAL_INITIAL_MEMORY>=TOTAL_STACK,"INITIAL_MEMORY should be larger than TOTAL_STACK, was "+INITIAL_INITIAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")"),assert("undefined"!=typeof Int32Array&&"undefined"!=typeof Float64Array&&void 0!==Int32Array.prototype.subarray&&void 0!==Int32Array.prototype.set,"JS engine does not provide full typed array support"),(wasmMemory=Module.wasmMemory?Module.wasmMemory:new WebAssembly.Memory({initial:INITIAL_INITIAL_MEMORY/WASM_PAGE_SIZE,maximum:INITIAL_INITIAL_MEMORY/WASM_PAGE_SIZE}))&&(buffer=wasmMemory.buffer),assert((INITIAL_INITIAL_MEMORY=buffer.byteLength)%WASM_PAGE_SIZE==0),updateGlobalBufferAndViews(buffer),HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE,function(){var e=new Int16Array(1),t=new Int8Array(e.buffer);if(e[0]=25459,115!==t[0]||99!==t[1])throw"Runtime error: expected the system to be little-endian!"}();var __ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATEXIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1,runtimeExited=!1;function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){checkStackCookie(),assert(!runtimeInitialized),runtimeInitialized=!0,Module.noFSInit||FS.init.initialized||FS.init(),TTY.init(),callRuntimeCallbacks(__ATINIT__)}function preMain(){checkStackCookie(),FS.ignorePermissions=!1,callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){checkStackCookie(),runtimeExited=!0}function postRun(){if(checkStackCookie(),Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(e){__ATPRERUN__.unshift(e)}function addOnInit(e){__ATINIT__.unshift(e)}function addOnPreMain(e){__ATMAIN__.unshift(e)}function addOnExit(e){}function addOnPostRun(e){__ATPOSTRUN__.unshift(e)}function unSign(e,t,i){return e>=0?e:t<=32?2*Math.abs(1<<t-1)+e:Math.pow(2,t)+e}function reSign(e,t,i){if(e<=0)return e;var r=t<=32?Math.abs(1<<t-1):Math.pow(2,t-1);return e>=r&&(t<=32||e>r)&&(e=-2*r+e),e}assert(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),assert(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),assert(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),assert(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var Math_abs=Math.abs,Math_cos=Math.cos,Math_sin=Math.sin,Math_tan=Math.tan,Math_acos=Math.acos,Math_asin=Math.asin,Math_atan=Math.atan,Math_atan2=Math.atan2,Math_exp=Math.exp,Math_log=Math.log,Math_sqrt=Math.sqrt,Math_ceil=Math.ceil,Math_floor=Math.floor,Math_pow=Math.pow,Math_imul=Math.imul,Math_fround=Math.fround,Math_round=Math.round,Math_min=Math.min,Math_max=Math.max,Math_clz32=Math.clz32,Math_trunc=Math.trunc,runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null,runDependencyTracking={};function getUniqueRunDependency(e){for(var t=e;;){if(!runDependencyTracking[e])return e;e=t+Math.random()}}function addRunDependency(e){runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),e?(assert(!runDependencyTracking[e]),runDependencyTracking[e]=1,null===runDependencyWatcher&&"undefined"!=typeof setInterval&&(runDependencyWatcher=setInterval((function(){if(ABORT)return clearInterval(runDependencyWatcher),void(runDependencyWatcher=null);var e=!1;for(var t in runDependencyTracking)e||(e=!0,err("still waiting on run dependencies:")),err("dependency: "+t);e&&err("(end of list)")}),1e4))):err("warning: run dependency added without ID")}function removeRunDependency(e){if(runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),e?(assert(runDependencyTracking[e]),delete runDependencyTracking[e]):err("warning: run dependency removed without ID"),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)){var t=dependenciesFulfilled;dependenciesFulfilled=null,t()}}function abort(e){throw Module.onAbort&&Module.onAbort(e),out(e+=""),err(e),ABORT=!0,EXITSTATUS=1,e="abort("+e+") at "+stackTrace(),new WebAssembly.RuntimeError(e)}Module.preloadedImages={},Module.preloadedAudios={};var memoryInitializer=null;function hasPrefix(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(e){return hasPrefix(e,dataURIPrefix)}var fileURIPrefix="file://";function isFileURI(e){return hasPrefix(e,fileURIPrefix)}var tempDouble,tempI64,wasmBinaryFile="libat.wasm";function getBinary(){try{if(wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(wasmBinaryFile);throw"both async and sync fetching of the wasm failed"}catch(e){abort(e)}}function getBinaryPromise(){return wasmBinary||!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER||"function"!=typeof fetch||isFileURI(wasmBinaryFile)?new Promise((function(e,t){e(getBinary())})):fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+wasmBinaryFile+"'";return e.arrayBuffer()})).catch((function(){return getBinary()}))}function createWasm(){var e={env:asmLibraryArg,wasi_snapshot_preview1:asmLibraryArg};function t(e,t){var i=e.exports;Module.asm=i,removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");var i=Module;function r(e){assert(Module===i,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),i=null,t(e.instance)}function n(t){return getBinaryPromise().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){err("failed to asynchronously prepare wasm: "+e),abort(e)}))}if(Module.instantiateWasm)try{return Module.instantiateWasm(e,t)}catch(e){return err("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(wasmBinary||"function"!=typeof WebAssembly.instantiateStreaming||isDataURI(wasmBinaryFile)||isFileURI(wasmBinaryFile)||"function"!=typeof fetch)return n(r);fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){err("wasm streaming compile failed: "+e),err("falling back to ArrayBuffer instantiation"),n(r)}))}))}(),{}}isDataURI(wasmBinaryFile)||(wasmBinaryFile=locateFile(wasmBinaryFile));var ASM_CONSTS={};function demangle(e){return warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"),e}function demangleAll(e){return e.replace(/\b_Z[\w\d_]+/g,(function(e){var t=demangle(e);return e===t?e:t+" ["+e+"]"}))}function jsStackTrace(){var e=new Error;if(!e.stack){try{throw new Error}catch(t){e=t}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}function stackTrace(){var e=jsStackTrace();return Module.extraStackTrace&&(e+="\n"+Module.extraStackTrace()),demangleAll(e)}function ___assert_fail(e,t,i,r){abort("Assertion failed: "+UTF8ToString(e)+", at: "+[t?UTF8ToString(t):"unknown filename",i,r?UTF8ToString(r):"unknown function"])}function ___handle_stack_overflow(){abort("stack overflow")}function setErrNo(e){return HEAP32[___errno_location()>>2]=e,e}__ATINIT__.push({func:function(){___wasm_call_ctors()}});var PATH={splitPath:function(e){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1)},normalizeArray:function(e,t){for(var i=0,r=e.length-1;r>=0;r--){var n=e[r];"."===n?e.splice(r,1):".."===n?(e.splice(r,1),i++):i&&(e.splice(r,1),i--)}if(t)for(;i;i--)e.unshift("..");return e},normalize:function(e){var t="/"===e.charAt(0),i="/"===e.substr(-1);return(e=PATH.normalizeArray(e.split("/").filter((function(e){return!!e})),!t).join("/"))||t||(e="."),e&&i&&(e+="/"),(t?"/":"")+e},dirname:function(e){var t=PATH.splitPath(e),i=t[0],r=t[1];return i||r?(r&&(r=r.substr(0,r.length-1)),i+r):"."},basename:function(e){if("/"===e)return"/";var t=e.lastIndexOf("/");return-1===t?e:e.substr(t+1)},extname:function(e){return PATH.splitPath(e)[3]},join:function(){var e=Array.prototype.slice.call(arguments,0);return PATH.normalize(e.join("/"))},join2:function(e,t){return PATH.normalize(e+"/"+t)}},PATH_FS={resolve:function(){for(var e="",t=!1,i=arguments.length-1;i>=-1&&!t;i--){var r=i>=0?arguments[i]:FS.cwd();if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");if(!r)return"";e=r+"/"+e,t="/"===r.charAt(0)}return(t?"/":"")+(e=PATH.normalizeArray(e.split("/").filter((function(e){return!!e})),!t).join("/"))||"."},relative:function(e,t){function i(e){for(var t=0;t<e.length&&""===e[t];t++);for(var i=e.length-1;i>=0&&""===e[i];i--);return t>i?[]:e.slice(t,i-t+1)}e=PATH_FS.resolve(e).substr(1),t=PATH_FS.resolve(t).substr(1);for(var r=i(e.split("/")),n=i(t.split("/")),a=Math.min(r.length,n.length),o=a,_=0;_<a;_++)if(r[_]!==n[_]){o=_;break}var s=[];for(_=o;_<r.length;_++)s.push("..");return(s=s.concat(n.slice(o))).join("/")}},TTY={ttys:[],init:function(){},shutdown:function(){},register:function(e,t){TTY.ttys[e]={input:[],output:[],ops:t},FS.registerDevice(e,TTY.stream_ops)},stream_ops:{open:function(e){var t=TTY.ttys[e.node.rdev];if(!t)throw new FS.ErrnoError(43);e.tty=t,e.seekable=!1},close:function(e){e.tty.ops.flush(e.tty)},flush:function(e){e.tty.ops.flush(e.tty)},read:function(e,t,i,r,n){if(!e.tty||!e.tty.ops.get_char)throw new FS.ErrnoError(60);for(var a=0,o=0;o<r;o++){var _;try{_=e.tty.ops.get_char(e.tty)}catch(e){throw new FS.ErrnoError(29)}if(void 0===_&&0===a)throw new FS.ErrnoError(6);if(null==_)break;a++,t[i+o]=_}return a&&(e.node.timestamp=Date.now()),a},write:function(e,t,i,r,n){if(!e.tty||!e.tty.ops.put_char)throw new FS.ErrnoError(60);try{for(var a=0;a<r;a++)e.tty.ops.put_char(e.tty,t[i+a])}catch(e){throw new FS.ErrnoError(29)}return r&&(e.node.timestamp=Date.now()),a}},default_tty_ops:{get_char:function(e){if(!e.input.length){var t=null;if(ENVIRONMENT_IS_NODE){var i=Buffer.alloc?Buffer.alloc(256):new Buffer(256),r=0;try{r=nodeFS.readSync(process.stdin.fd,i,0,256,null)}catch(e){if(-1==e.toString().indexOf("EOF"))throw e;r=0}t=r>0?i.slice(0,r).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(t=window.prompt("Input: "))&&(t+="\n"):"function"==typeof readline&&null!==(t=readline())&&(t+="\n");if(!t)return null;e.input=intArrayFromString(t,!0)}return e.input.shift()},put_char:function(e,t){null===t||10===t?(out(UTF8ArrayToString(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},flush:function(e){e.output&&e.output.length>0&&(out(UTF8ArrayToString(e.output,0)),e.output=[])}},default_tty1_ops:{put_char:function(e,t){null===t||10===t?(err(UTF8ArrayToString(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},flush:function(e){e.output&&e.output.length>0&&(err(UTF8ArrayToString(e.output,0)),e.output=[])}}},MEMFS={ops_table:null,mount:function(e){return MEMFS.createNode(null,"/",16895,0)},createNode:function(e,t,i,r){if(FS.isBlkdev(i)||FS.isFIFO(i))throw new FS.ErrnoError(63);MEMFS.ops_table||(MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}});var n=FS.createNode(e,t,i,r);return FS.isDir(n.mode)?(n.node_ops=MEMFS.ops_table.dir.node,n.stream_ops=MEMFS.ops_table.dir.stream,n.contents={}):FS.isFile(n.mode)?(n.node_ops=MEMFS.ops_table.file.node,n.stream_ops=MEMFS.ops_table.file.stream,n.usedBytes=0,n.contents=null):FS.isLink(n.mode)?(n.node_ops=MEMFS.ops_table.link.node,n.stream_ops=MEMFS.ops_table.link.stream):FS.isChrdev(n.mode)&&(n.node_ops=MEMFS.ops_table.chrdev.node,n.stream_ops=MEMFS.ops_table.chrdev.stream),n.timestamp=Date.now(),e&&(e.contents[t]=n),n},getFileDataAsRegularArray:function(e){if(e.contents&&e.contents.subarray){for(var t=[],i=0;i<e.usedBytes;++i)t.push(e.contents[i]);return t}return e.contents},getFileDataAsTypedArray:function(e){return e.contents?e.contents.subarray?e.contents.subarray(0,e.usedBytes):new Uint8Array(e.contents):new Uint8Array(0)},expandFileStorage:function(e,t){var i=e.contents?e.contents.length:0;if(!(i>=t)){t=Math.max(t,i*(i<1048576?2:1.125)>>>0),0!=i&&(t=Math.max(t,256));var r=e.contents;e.contents=new Uint8Array(t),e.usedBytes>0&&e.contents.set(r.subarray(0,e.usedBytes),0)}},resizeFileStorage:function(e,t){if(e.usedBytes!=t){if(0==t)return e.contents=null,void(e.usedBytes=0);if(!e.contents||e.contents.subarray){var i=e.contents;return e.contents=new Uint8Array(t),i&&e.contents.set(i.subarray(0,Math.min(t,e.usedBytes))),void(e.usedBytes=t)}if(e.contents||(e.contents=[]),e.contents.length>t)e.contents.length=t;else for(;e.contents.length<t;)e.contents.push(0);e.usedBytes=t}},node_ops:{getattr:function(e){var t={};return t.dev=FS.isChrdev(e.mode)?e.id:1,t.ino=e.id,t.mode=e.mode,t.nlink=1,t.uid=0,t.gid=0,t.rdev=e.rdev,FS.isDir(e.mode)?t.size=4096:FS.isFile(e.mode)?t.size=e.usedBytes:FS.isLink(e.mode)?t.size=e.link.length:t.size=0,t.atime=new Date(e.timestamp),t.mtime=new Date(e.timestamp),t.ctime=new Date(e.timestamp),t.blksize=4096,t.blocks=Math.ceil(t.size/t.blksize),t},setattr:function(e,t){void 0!==t.mode&&(e.mode=t.mode),void 0!==t.timestamp&&(e.timestamp=t.timestamp),void 0!==t.size&&MEMFS.resizeFileStorage(e,t.size)},lookup:function(e,t){throw FS.genericErrors[44]},mknod:function(e,t,i,r){return MEMFS.createNode(e,t,i,r)},rename:function(e,t,i){if(FS.isDir(e.mode)){var r;try{r=FS.lookupNode(t,i)}catch(e){}if(r)for(var n in r.contents)throw new FS.ErrnoError(55)}delete e.parent.contents[e.name],e.name=i,t.contents[i]=e,e.parent=t},unlink:function(e,t){delete e.contents[t]},rmdir:function(e,t){var i=FS.lookupNode(e,t);for(var r in i.contents)throw new FS.ErrnoError(55);delete e.contents[t]},readdir:function(e){var t=[".",".."];for(var i in e.contents)e.contents.hasOwnProperty(i)&&t.push(i);return t},symlink:function(e,t,i){var r=MEMFS.createNode(e,t,41471,0);return r.link=i,r},readlink:function(e){if(!FS.isLink(e.mode))throw new FS.ErrnoError(28);return e.link}},stream_ops:{read:function(e,t,i,r,n){var a=e.node.contents;if(n>=e.node.usedBytes)return 0;var o=Math.min(e.node.usedBytes-n,r);if(assert(o>=0),o>8&&a.subarray)t.set(a.subarray(n,n+o),i);else for(var _=0;_<o;_++)t[i+_]=a[n+_];return o},write:function(e,t,i,r,n,a){if(assert(!(t instanceof ArrayBuffer)),!r)return 0;var o=e.node;if(o.timestamp=Date.now(),t.subarray&&(!o.contents||o.contents.subarray)){if(a)return assert(0===n,"canOwn must imply no weird position inside the file"),o.contents=t.subarray(i,i+r),o.usedBytes=r,r;if(0===o.usedBytes&&0===n)return o.contents=t.slice(i,i+r),o.usedBytes=r,r;if(n+r<=o.usedBytes)return o.contents.set(t.subarray(i,i+r),n),r}if(MEMFS.expandFileStorage(o,n+r),o.contents.subarray&&t.subarray)o.contents.set(t.subarray(i,i+r),n);else for(var _=0;_<r;_++)o.contents[n+_]=t[i+_];return o.usedBytes=Math.max(o.usedBytes,n+r),r},llseek:function(e,t,i){var r=t;if(1===i?r+=e.position:2===i&&FS.isFile(e.node.mode)&&(r+=e.node.usedBytes),r<0)throw new FS.ErrnoError(28);return r},allocate:function(e,t,i){MEMFS.expandFileStorage(e.node,t+i),e.node.usedBytes=Math.max(e.node.usedBytes,t+i)},mmap:function(e,t,i,r,n,a,o){if(assert(!(t instanceof ArrayBuffer)),!FS.isFile(e.node.mode))throw new FS.ErrnoError(43);var _,s,u=e.node.contents;if(2&o||u.buffer!==t.buffer){(n>0||n+r<u.length)&&(u=u.subarray?u.subarray(n,n+r):Array.prototype.slice.call(u,n,n+r)),s=!0;var l=t.buffer==HEAP8.buffer;if(!(_=_malloc(r)))throw new FS.ErrnoError(48);(l?HEAP8:t).set(u,_)}else s=!1,_=u.byteOffset;return{ptr:_,allocated:s}},msync:function(e,t,i,r,n){if(!FS.isFile(e.node.mode))throw new FS.ErrnoError(43);return 2&n||MEMFS.stream_ops.write(e,t,0,r,i,!1),0}}},ERRNO_MESSAGES={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"},ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return setErrNo(e.errno)},lookupPath:function(e,t){if(t=t||{},!(e=PATH_FS.resolve(FS.cwd(),e)))return{path:"",node:null};var i={follow_mount:!0,recurse_count:0};for(var r in i)void 0===t[r]&&(t[r]=i[r]);if(t.recurse_count>8)throw new FS.ErrnoError(32);for(var n=PATH.normalizeArray(e.split("/").filter((function(e){return!!e})),!1),a=FS.root,o="/",_=0;_<n.length;_++){var s=_===n.length-1;if(s&&t.parent)break;if(a=FS.lookupNode(a,n[_]),o=PATH.join2(o,n[_]),FS.isMountpoint(a)&&(!s||s&&t.follow_mount)&&(a=a.mounted.root),!s||t.follow)for(var u=0;FS.isLink(a.mode);){var l=FS.readlink(o);if(o=PATH_FS.resolve(PATH.dirname(o),l),a=FS.lookupPath(o,{recurse_count:t.recurse_count}).node,u++>40)throw new FS.ErrnoError(32)}}return{path:o,node:a}},getPath:function(e){for(var t;;){if(FS.isRoot(e)){var i=e.mount.mountpoint;return t?"/"!==i[i.length-1]?i+"/"+t:i+t:i}t=t?e.name+"/"+t:e.name,e=e.parent}},hashName:function(e,t){for(var i=0,r=0;r<t.length;r++)i=(i<<5)-i+t.charCodeAt(r)|0;return(e+i>>>0)%FS.nameTable.length},hashAddNode:function(e){var t=FS.hashName(e.parent.id,e.name);e.name_next=FS.nameTable[t],FS.nameTable[t]=e},hashRemoveNode:function(e){var t=FS.hashName(e.parent.id,e.name);if(FS.nameTable[t]===e)FS.nameTable[t]=e.name_next;else for(var i=FS.nameTable[t];i;){if(i.name_next===e){i.name_next=e.name_next;break}i=i.name_next}},lookupNode:function(e,t){var i=FS.mayLookup(e);if(i)throw new FS.ErrnoError(i,e);for(var r=FS.hashName(e.id,t),n=FS.nameTable[r];n;n=n.name_next){var a=n.name;if(n.parent.id===e.id&&a===t)return n}return FS.lookup(e,t)},createNode:function(e,t,i,r){var n=new FS.FSNode(e,t,i,r);return FS.hashAddNode(n),n},destroyNode:function(e){FS.hashRemoveNode(e)},isRoot:function(e){return e===e.parent},isMountpoint:function(e){return!!e.mounted},isFile:function(e){return 32768==(61440&e)},isDir:function(e){return 16384==(61440&e)},isLink:function(e){return 40960==(61440&e)},isChrdev:function(e){return 8192==(61440&e)},isBlkdev:function(e){return 24576==(61440&e)},isFIFO:function(e){return 4096==(61440&e)},isSocket:function(e){return 49152==(49152&e)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(e){var t=FS.flagModes[e];if(void 0===t)throw new Error("Unknown file open mode: "+e);return t},flagsToPermissionString:function(e){var t=["r","w","rw"][3&e];return 512&e&&(t+="w"),t},nodePermissions:function(e,t){return FS.ignorePermissions||(-1===t.indexOf("r")||292&e.mode)&&(-1===t.indexOf("w")||146&e.mode)&&(-1===t.indexOf("x")||73&e.mode)?0:2},mayLookup:function(e){return FS.nodePermissions(e,"x")||(e.node_ops.lookup?0:2)},mayCreate:function(e,t){try{return FS.lookupNode(e,t),20}catch(e){}return FS.nodePermissions(e,"wx")},mayDelete:function(e,t,i){var r;try{r=FS.lookupNode(e,t)}catch(e){return e.errno}var n=FS.nodePermissions(e,"wx");if(n)return n;if(i){if(!FS.isDir(r.mode))return 54;if(FS.isRoot(r)||FS.getPath(r)===FS.cwd())return 10}else if(FS.isDir(r.mode))return 31;return 0},mayOpen:function(e,t){return e?FS.isLink(e.mode)?32:FS.isDir(e.mode)&&("r"!==FS.flagsToPermissionString(t)||512&t)?31:FS.nodePermissions(e,FS.flagsToPermissionString(t)):44},MAX_OPEN_FDS:4096,nextfd:function(e,t){e=e||0,t=t||FS.MAX_OPEN_FDS;for(var i=e;i<=t;i++)if(!FS.streams[i])return i;throw new FS.ErrnoError(33)},getStream:function(e){return FS.streams[e]},createStream:function(e,t,i){FS.FSStream||(FS.FSStream=function(){},FS.FSStream.prototype={object:{get:function(){return this.node},set:function(e){this.node=e}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}});var r=new FS.FSStream;for(var n in e)r[n]=e[n];e=r;var a=FS.nextfd(t,i);return e.fd=a,FS.streams[a]=e,e},closeStream:function(e){FS.streams[e]=null},chrdev_stream_ops:{open:function(e){var t=FS.getDevice(e.node.rdev);e.stream_ops=t.stream_ops,e.stream_ops.open&&e.stream_ops.open(e)},llseek:function(){throw new FS.ErrnoError(70)}},major:function(e){return e>>8},minor:function(e){return 255&e},makedev:function(e,t){return e<<8|t},registerDevice:function(e,t){FS.devices[e]={stream_ops:t}},getDevice:function(e){return FS.devices[e]},getMounts:function(e){for(var t=[],i=[e];i.length;){var r=i.pop();t.push(r),i.push.apply(i,r.mounts)}return t},syncfs:function(e,t){"function"==typeof e&&(t=e,e=!1),FS.syncFSRequests++,FS.syncFSRequests>1&&err("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var i=FS.getMounts(FS.root.mount),r=0;function n(e){return assert(FS.syncFSRequests>0),FS.syncFSRequests--,t(e)}function a(e){if(e)return a.errored?void 0:(a.errored=!0,n(e));++r>=i.length&&n(null)}i.forEach((function(t){if(!t.type.syncfs)return a(null);t.type.syncfs(t,e,a)}))},mount:function(e,t,i){if("string"==typeof e)throw e;var r,n="/"===i,a=!i;if(n&&FS.root)throw new FS.ErrnoError(10);if(!n&&!a){var o=FS.lookupPath(i,{follow_mount:!1});if(i=o.path,r=o.node,FS.isMountpoint(r))throw new FS.ErrnoError(10);if(!FS.isDir(r.mode))throw new FS.ErrnoError(54)}var _={type:e,opts:t,mountpoint:i,mounts:[]},s=e.mount(_);return s.mount=_,_.root=s,n?FS.root=s:r&&(r.mounted=_,r.mount&&r.mount.mounts.push(_)),s},unmount:function(e){var t=FS.lookupPath(e,{follow_mount:!1});if(!FS.isMountpoint(t.node))throw new FS.ErrnoError(28);var i=t.node,r=i.mounted,n=FS.getMounts(r);Object.keys(FS.nameTable).forEach((function(e){for(var t=FS.nameTable[e];t;){var i=t.name_next;-1!==n.indexOf(t.mount)&&FS.destroyNode(t),t=i}})),i.mounted=null;var a=i.mount.mounts.indexOf(r);assert(-1!==a),i.mount.mounts.splice(a,1)},lookup:function(e,t){return e.node_ops.lookup(e,t)},mknod:function(e,t,i){var r=FS.lookupPath(e,{parent:!0}).node,n=PATH.basename(e);if(!n||"."===n||".."===n)throw new FS.ErrnoError(28);var a=FS.mayCreate(r,n);if(a)throw new FS.ErrnoError(a);if(!r.node_ops.mknod)throw new FS.ErrnoError(63);return r.node_ops.mknod(r,n,t,i)},create:function(e,t){return t=void 0!==t?t:438,t&=4095,t|=32768,FS.mknod(e,t,0)},mkdir:function(e,t){return t=void 0!==t?t:511,t&=1023,t|=16384,FS.mknod(e,t,0)},mkdirTree:function(e,t){for(var i=e.split("/"),r="",n=0;n<i.length;++n)if(i[n]){r+="/"+i[n];try{FS.mkdir(r,t)}catch(e){if(20!=e.errno)throw e}}},mkdev:function(e,t,i){return void 0===i&&(i=t,t=438),t|=8192,FS.mknod(e,t,i)},symlink:function(e,t){if(!PATH_FS.resolve(e))throw new FS.ErrnoError(44);var i=FS.lookupPath(t,{parent:!0}).node;if(!i)throw new FS.ErrnoError(44);var r=PATH.basename(t),n=FS.mayCreate(i,r);if(n)throw new FS.ErrnoError(n);if(!i.node_ops.symlink)throw new FS.ErrnoError(63);return i.node_ops.symlink(i,r,e)},rename:function(e,t){var i,r,n=PATH.dirname(e),a=PATH.dirname(t),o=PATH.basename(e),_=PATH.basename(t);try{i=FS.lookupPath(e,{parent:!0}).node,r=FS.lookupPath(t,{parent:!0}).node}catch(e){throw new FS.ErrnoError(10)}if(!i||!r)throw new FS.ErrnoError(44);if(i.mount!==r.mount)throw new FS.ErrnoError(75);var s,u=FS.lookupNode(i,o),l=PATH_FS.relative(e,a);if("."!==l.charAt(0))throw new FS.ErrnoError(28);if("."!==(l=PATH_FS.relative(t,n)).charAt(0))throw new FS.ErrnoError(55);try{s=FS.lookupNode(r,_)}catch(e){}if(u!==s){var d=FS.isDir(u.mode),m=FS.mayDelete(i,o,d);if(m)throw new FS.ErrnoError(m);if(m=s?FS.mayDelete(r,_,d):FS.mayCreate(r,_))throw new FS.ErrnoError(m);if(!i.node_ops.rename)throw new FS.ErrnoError(63);if(FS.isMountpoint(u)||s&&FS.isMountpoint(s))throw new FS.ErrnoError(10);if(r!==i&&(m=FS.nodePermissions(i,"w")))throw new FS.ErrnoError(m);try{FS.trackingDelegate.willMovePath&&FS.trackingDelegate.willMovePath(e,t)}catch(i){err("FS.trackingDelegate['willMovePath']('"+e+"', '"+t+"') threw an exception: "+i.message)}FS.hashRemoveNode(u);try{i.node_ops.rename(u,r,_)}catch(e){throw e}finally{FS.hashAddNode(u)}try{FS.trackingDelegate.onMovePath&&FS.trackingDelegate.onMovePath(e,t)}catch(i){err("FS.trackingDelegate['onMovePath']('"+e+"', '"+t+"') threw an exception: "+i.message)}}},rmdir:function(e){var t=FS.lookupPath(e,{parent:!0}).node,i=PATH.basename(e),r=FS.lookupNode(t,i),n=FS.mayDelete(t,i,!0);if(n)throw new FS.ErrnoError(n);if(!t.node_ops.rmdir)throw new FS.ErrnoError(63);if(FS.isMountpoint(r))throw new FS.ErrnoError(10);try{FS.trackingDelegate.willDeletePath&&FS.trackingDelegate.willDeletePath(e)}catch(t){err("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+t.message)}t.node_ops.rmdir(t,i),FS.destroyNode(r);try{FS.trackingDelegate.onDeletePath&&FS.trackingDelegate.onDeletePath(e)}catch(t){err("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+t.message)}},readdir:function(e){var t=FS.lookupPath(e,{follow:!0}).node;if(!t.node_ops.readdir)throw new FS.ErrnoError(54);return t.node_ops.readdir(t)},unlink:function(e){var t=FS.lookupPath(e,{parent:!0}).node,i=PATH.basename(e),r=FS.lookupNode(t,i),n=FS.mayDelete(t,i,!1);if(n)throw new FS.ErrnoError(n);if(!t.node_ops.unlink)throw new FS.ErrnoError(63);if(FS.isMountpoint(r))throw new FS.ErrnoError(10);try{FS.trackingDelegate.willDeletePath&&FS.trackingDelegate.willDeletePath(e)}catch(t){err("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+t.message)}t.node_ops.unlink(t,i),FS.destroyNode(r);try{FS.trackingDelegate.onDeletePath&&FS.trackingDelegate.onDeletePath(e)}catch(t){err("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+t.message)}},readlink:function(e){var t=FS.lookupPath(e).node;if(!t)throw new FS.ErrnoError(44);if(!t.node_ops.readlink)throw new FS.ErrnoError(28);return PATH_FS.resolve(FS.getPath(t.parent),t.node_ops.readlink(t))},stat:function(e,t){var i=FS.lookupPath(e,{follow:!t}).node;if(!i)throw new FS.ErrnoError(44);if(!i.node_ops.getattr)throw new FS.ErrnoError(63);return i.node_ops.getattr(i)},lstat:function(e){return FS.stat(e,!0)},chmod:function(e,t,i){var r;if(!(r="string"==typeof e?FS.lookupPath(e,{follow:!i}).node:e).node_ops.setattr)throw new FS.ErrnoError(63);r.node_ops.setattr(r,{mode:4095&t|-4096&r.mode,timestamp:Date.now()})},lchmod:function(e,t){FS.chmod(e,t,!0)},fchmod:function(e,t){var i=FS.getStream(e);if(!i)throw new FS.ErrnoError(8);FS.chmod(i.node,t)},chown:function(e,t,i,r){var n;if(!(n="string"==typeof e?FS.lookupPath(e,{follow:!r}).node:e).node_ops.setattr)throw new FS.ErrnoError(63);n.node_ops.setattr(n,{timestamp:Date.now()})},lchown:function(e,t,i){FS.chown(e,t,i,!0)},fchown:function(e,t,i){var r=FS.getStream(e);if(!r)throw new FS.ErrnoError(8);FS.chown(r.node,t,i)},truncate:function(e,t){if(t<0)throw new FS.ErrnoError(28);var i;if(!(i="string"==typeof e?FS.lookupPath(e,{follow:!0}).node:e).node_ops.setattr)throw new FS.ErrnoError(63);if(FS.isDir(i.mode))throw new FS.ErrnoError(31);if(!FS.isFile(i.mode))throw new FS.ErrnoError(28);var r=FS.nodePermissions(i,"w");if(r)throw new FS.ErrnoError(r);i.node_ops.setattr(i,{size:t,timestamp:Date.now()})},ftruncate:function(e,t){var i=FS.getStream(e);if(!i)throw new FS.ErrnoError(8);if(0==(2097155&i.flags))throw new FS.ErrnoError(28);FS.truncate(i.node,t)},utime:function(e,t,i){var r=FS.lookupPath(e,{follow:!0}).node;r.node_ops.setattr(r,{timestamp:Math.max(t,i)})},open:function(e,t,i,r,n){if(""===e)throw new FS.ErrnoError(44);var a;if(i=void 0===i?438:i,i=64&(t="string"==typeof t?FS.modeStringToFlags(t):t)?4095&i|32768:0,"object"==typeof e)a=e;else{e=PATH.normalize(e);try{a=FS.lookupPath(e,{follow:!(131072&t)}).node}catch(e){}}var o=!1;if(64&t)if(a){if(128&t)throw new FS.ErrnoError(20)}else a=FS.mknod(e,i,0),o=!0;if(!a)throw new FS.ErrnoError(44);if(FS.isChrdev(a.mode)&&(t&=-513),65536&t&&!FS.isDir(a.mode))throw new FS.ErrnoError(54);if(!o){var _=FS.mayOpen(a,t);if(_)throw new FS.ErrnoError(_)}512&t&&FS.truncate(a,0),t&=-131713;var s=FS.createStream({node:a,path:FS.getPath(a),flags:t,seekable:!0,position:0,stream_ops:a.stream_ops,ungotten:[],error:!1},r,n);s.stream_ops.open&&s.stream_ops.open(s),!Module.logReadFiles||1&t||(FS.readFiles||(FS.readFiles={}),e in FS.readFiles||(FS.readFiles[e]=1,err("FS.trackingDelegate error on read file: "+e)));try{if(FS.trackingDelegate.onOpenFile){var u=0;1!=(2097155&t)&&(u|=FS.tracking.openFlags.READ),0!=(2097155&t)&&(u|=FS.tracking.openFlags.WRITE),FS.trackingDelegate.onOpenFile(e,u)}}catch(t){err("FS.trackingDelegate['onOpenFile']('"+e+"', flags) threw an exception: "+t.message)}return s},close:function(e){if(FS.isClosed(e))throw new FS.ErrnoError(8);e.getdents&&(e.getdents=null);try{e.stream_ops.close&&e.stream_ops.close(e)}catch(e){throw e}finally{FS.closeStream(e.fd)}e.fd=null},isClosed:function(e){return null===e.fd},llseek:function(e,t,i){if(FS.isClosed(e))throw new FS.ErrnoError(8);if(!e.seekable||!e.stream_ops.llseek)throw new FS.ErrnoError(70);if(0!=i&&1!=i&&2!=i)throw new FS.ErrnoError(28);return e.position=e.stream_ops.llseek(e,t,i),e.ungotten=[],e.position},read:function(e,t,i,r,n){if(r<0||n<0)throw new FS.ErrnoError(28);if(FS.isClosed(e))throw new FS.ErrnoError(8);if(1==(2097155&e.flags))throw new FS.ErrnoError(8);if(FS.isDir(e.node.mode))throw new FS.ErrnoError(31);if(!e.stream_ops.read)throw new FS.ErrnoError(28);var a=void 0!==n;if(a){if(!e.seekable)throw new FS.ErrnoError(70)}else n=e.position;var o=e.stream_ops.read(e,t,i,r,n);return a||(e.position+=o),o},write:function(e,t,i,r,n,a){if(r<0||n<0)throw new FS.ErrnoError(28);if(FS.isClosed(e))throw new FS.ErrnoError(8);if(0==(2097155&e.flags))throw new FS.ErrnoError(8);if(FS.isDir(e.node.mode))throw new FS.ErrnoError(31);if(!e.stream_ops.write)throw new FS.ErrnoError(28);e.seekable&&1024&e.flags&&FS.llseek(e,0,2);var o=void 0!==n;if(o){if(!e.seekable)throw new FS.ErrnoError(70)}else n=e.position;var _=e.stream_ops.write(e,t,i,r,n,a);o||(e.position+=_);try{e.path&&FS.trackingDelegate.onWriteToFile&&FS.trackingDelegate.onWriteToFile(e.path)}catch(t){err("FS.trackingDelegate['onWriteToFile']('"+e.path+"') threw an exception: "+t.message)}return _},allocate:function(e,t,i){if(FS.isClosed(e))throw new FS.ErrnoError(8);if(t<0||i<=0)throw new FS.ErrnoError(28);if(0==(2097155&e.flags))throw new FS.ErrnoError(8);if(!FS.isFile(e.node.mode)&&!FS.isDir(e.node.mode))throw new FS.ErrnoError(43);if(!e.stream_ops.allocate)throw new FS.ErrnoError(138);e.stream_ops.allocate(e,t,i)},mmap:function(e,t,i,r,n,a,o){if(0!=(2&a)&&0==(2&o)&&2!=(2097155&e.flags))throw new FS.ErrnoError(2);if(1==(2097155&e.flags))throw new FS.ErrnoError(2);if(!e.stream_ops.mmap)throw new FS.ErrnoError(43);return e.stream_ops.mmap(e,t,i,r,n,a,o)},msync:function(e,t,i,r,n){return e&&e.stream_ops.msync?e.stream_ops.msync(e,t,i,r,n):0},munmap:function(e){return 0},ioctl:function(e,t,i){if(!e.stream_ops.ioctl)throw new FS.ErrnoError(59);return e.stream_ops.ioctl(e,t,i)},readFile:function(e,t){if((t=t||{}).flags=t.flags||"r",t.encoding=t.encoding||"binary","utf8"!==t.encoding&&"binary"!==t.encoding)throw new Error('Invalid encoding type "'+t.encoding+'"');var i,r=FS.open(e,t.flags),n=FS.stat(e).size,a=new Uint8Array(n);return FS.read(r,a,0,n,0),"utf8"===t.encoding?i=UTF8ArrayToString(a,0):"binary"===t.encoding&&(i=a),FS.close(r),i},writeFile:function(e,t,i){(i=i||{}).flags=i.flags||"w";var r=FS.open(e,i.flags,i.mode);if("string"==typeof t){var n=new Uint8Array(lengthBytesUTF8(t)+1),a=stringToUTF8Array(t,n,0,n.length);FS.write(r,n,0,a,void 0,i.canOwn)}else{if(!ArrayBuffer.isView(t))throw new Error("Unsupported data type");FS.write(r,t,0,t.byteLength,void 0,i.canOwn)}FS.close(r)},cwd:function(){return FS.currentPath},chdir:function(e){var t=FS.lookupPath(e,{follow:!0});if(null===t.node)throw new FS.ErrnoError(44);if(!FS.isDir(t.node.mode))throw new FS.ErrnoError(54);var i=FS.nodePermissions(t.node,"x");if(i)throw new FS.ErrnoError(i);FS.currentPath=t.path},createDefaultDirectories:function(){FS.mkdir("/tmp"),FS.mkdir("/home"),FS.mkdir("/home/web_user")},createDefaultDevices:function(){var e;if(FS.mkdir("/dev"),FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(e,t,i,r,n){return r}}),FS.mkdev("/dev/null",FS.makedev(1,3)),TTY.register(FS.makedev(5,0),TTY.default_tty_ops),TTY.register(FS.makedev(6,0),TTY.default_tty1_ops),FS.mkdev("/dev/tty",FS.makedev(5,0)),FS.mkdev("/dev/tty1",FS.makedev(6,0)),"object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var t=new Uint8Array(1);e=function(){return crypto.getRandomValues(t),t[0]}}else if(ENVIRONMENT_IS_NODE)try{var i=require("crypto");e=function(){return i.randomBytes(1)[0]}}catch(e){}e||(e=function(){abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")}),FS.createDevice("/dev","random",e),FS.createDevice("/dev","urandom",e),FS.mkdir("/dev/shm"),FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FS.mkdir("/proc"),FS.mkdir("/proc/self"),FS.mkdir("/proc/self/fd"),FS.mount({mount:function(){var e=FS.createNode("/proc/self","fd",16895,73);return e.node_ops={lookup:function(e,t){var i=+t,r=FS.getStream(i);if(!r)throw new FS.ErrnoError(8);var n={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return r.path}}};return n.parent=n,n}},e}},{},"/proc/self/fd")},createStandardStreams:function(){Module.stdin?FS.createDevice("/dev","stdin",Module.stdin):FS.symlink("/dev/tty","/dev/stdin"),Module.stdout?FS.createDevice("/dev","stdout",null,Module.stdout):FS.symlink("/dev/tty","/dev/stdout"),Module.stderr?FS.createDevice("/dev","stderr",null,Module.stderr):FS.symlink("/dev/tty1","/dev/stderr");var e=FS.open("/dev/stdin","r"),t=FS.open("/dev/stdout","w"),i=FS.open("/dev/stderr","w");assert(0===e.fd,"invalid handle for stdin ("+e.fd+")"),assert(1===t.fd,"invalid handle for stdout ("+t.fd+")"),assert(2===i.fd,"invalid handle for stderr ("+i.fd+")")},ensureErrnoError:function(){FS.ErrnoError||(FS.ErrnoError=function(e,t){this.node=t,this.setErrno=function(e){for(var t in this.errno=e,ERRNO_CODES)if(ERRNO_CODES[t]===e){this.code=t;break}},this.setErrno(e),this.message=ERRNO_MESSAGES[e],this.stack&&(Object.defineProperty(this,"stack",{value:(new Error).stack,writable:!0}),this.stack=demangleAll(this.stack))},FS.ErrnoError.prototype=new Error,FS.ErrnoError.prototype.constructor=FS.ErrnoError,[44].forEach((function(e){FS.genericErrors[e]=new FS.ErrnoError(e),FS.genericErrors[e].stack="<generic error, no stack>"})))},staticInit:function(){FS.ensureErrnoError(),FS.nameTable=new Array(4096),FS.mount(MEMFS,{},"/"),FS.createDefaultDirectories(),FS.createDefaultDevices(),FS.createSpecialDirectories(),FS.filesystems={MEMFS}},init:function(e,t,i){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),FS.init.initialized=!0,FS.ensureErrnoError(),Module.stdin=e||Module.stdin,Module.stdout=t||Module.stdout,Module.stderr=i||Module.stderr,FS.createStandardStreams()},quit:function(){FS.init.initialized=!1;var e=Module._fflush;e&&e(0);for(var t=0;t<FS.streams.length;t++){var i=FS.streams[t];i&&FS.close(i)}},getMode:function(e,t){var i=0;return e&&(i|=365),t&&(i|=146),i},joinPath:function(e,t){var i=PATH.join.apply(null,e);return t&&"/"==i[0]&&(i=i.substr(1)),i},absolutePath:function(e,t){return PATH_FS.resolve(t,e)},standardizePath:function(e){return PATH.normalize(e)},findObject:function(e,t){var i=FS.analyzePath(e,t);return i.exists?i.object:(setErrNo(i.error),null)},analyzePath:function(e,t){try{e=(r=FS.lookupPath(e,{follow:!t})).path}catch(e){}var i={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var r=FS.lookupPath(e,{parent:!0});i.parentExists=!0,i.parentPath=r.path,i.parentObject=r.node,i.name=PATH.basename(e),r=FS.lookupPath(e,{follow:!t}),i.exists=!0,i.path=r.path,i.object=r.node,i.name=r.node.name,i.isRoot="/"===r.path}catch(e){i.error=e.errno}return i},createFolder:function(e,t,i,r){var n=PATH.join2("string"==typeof e?e:FS.getPath(e),t),a=FS.getMode(i,r);return FS.mkdir(n,a)},createPath:function(e,t,i,r){e="string"==typeof e?e:FS.getPath(e);for(var n=t.split("/").reverse();n.length;){var a=n.pop();if(a){var o=PATH.join2(e,a);try{FS.mkdir(o)}catch(e){}e=o}}return o},createFile:function(e,t,i,r,n){var a=PATH.join2("string"==typeof e?e:FS.getPath(e),t),o=FS.getMode(r,n);return FS.create(a,o)},createDataFile:function(e,t,i,r,n,a){var o=t?PATH.join2("string"==typeof e?e:FS.getPath(e),t):e,_=FS.getMode(r,n),s=FS.create(o,_);if(i){if("string"==typeof i){for(var u=new Array(i.length),l=0,d=i.length;l<d;++l)u[l]=i.charCodeAt(l);i=u}FS.chmod(s,146|_);var m=FS.open(s,"w");FS.write(m,i,0,i.length,0,a),FS.close(m),FS.chmod(s,_)}return s},createDevice:function(e,t,i,r){var n=PATH.join2("string"==typeof e?e:FS.getPath(e),t),a=FS.getMode(!!i,!!r);FS.createDevice.major||(FS.createDevice.major=64);var o=FS.makedev(FS.createDevice.major++,0);return FS.registerDevice(o,{open:function(e){e.seekable=!1},close:function(e){r&&r.buffer&&r.buffer.length&&r(10)},read:function(e,t,r,n,a){for(var o=0,_=0;_<n;_++){var s;try{s=i()}catch(e){throw new FS.ErrnoError(29)}if(void 0===s&&0===o)throw new FS.ErrnoError(6);if(null==s)break;o++,t[r+_]=s}return o&&(e.node.timestamp=Date.now()),o},write:function(e,t,i,n,a){for(var o=0;o<n;o++)try{r(t[i+o])}catch(e){throw new FS.ErrnoError(29)}return n&&(e.node.timestamp=Date.now()),o}}),FS.mkdev(n,a,o)},createLink:function(e,t,i,r,n){var a=PATH.join2("string"==typeof e?e:FS.getPath(e),t);return FS.symlink(i,a)},forceLoadFile:function(e){if(e.isDevice||e.isFolder||e.link||e.contents)return!0;var t=!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!read_)throw new Error("Cannot load without read() or XMLHttpRequest.");try{e.contents=intArrayFromString(read_(e.url),!0),e.usedBytes=e.contents.length}catch(e){t=!1}return t||setErrNo(29),t},createLazyFile:function(e,t,i,r,n){function a(){this.lengthKnown=!1,this.chunks=[]}if(a.prototype.get=function(e){if(!(e>this.length-1||e<0)){var t=e%this.chunkSize,i=e/this.chunkSize|0;return this.getter(i)[t]}},a.prototype.setDataGetter=function(e){this.getter=e},a.prototype.cacheLength=function(){var e=new XMLHttpRequest;if(e.open("HEAD",i,!1),e.send(null),!(e.status>=200&&e.status<300||304===e.status))throw new Error("Couldn't load "+i+". Status: "+e.status);var t,r=Number(e.getResponseHeader("Content-length")),n=(t=e.getResponseHeader("Accept-Ranges"))&&"bytes"===t,a=(t=e.getResponseHeader("Content-Encoding"))&&"gzip"===t,o=1048576;n||(o=r);var _=this;_.setDataGetter((function(e){var t=e*o,n=(e+1)*o-1;if(n=Math.min(n,r-1),void 0===_.chunks[e]&&(_.chunks[e]=function(e,t){if(e>t)throw new Error("invalid range ("+e+", "+t+") or no bytes requested!");if(t>r-1)throw new Error("only "+r+" bytes available! programmer error!");var n=new XMLHttpRequest;if(n.open("GET",i,!1),r!==o&&n.setRequestHeader("Range","bytes="+e+"-"+t),"undefined"!=typeof Uint8Array&&(n.responseType="arraybuffer"),n.overrideMimeType&&n.overrideMimeType("text/plain; charset=x-user-defined"),n.send(null),!(n.status>=200&&n.status<300||304===n.status))throw new Error("Couldn't load "+i+". Status: "+n.status);return void 0!==n.response?new Uint8Array(n.response||[]):intArrayFromString(n.responseText||"",!0)}(t,n)),void 0===_.chunks[e])throw new Error("doXHR failed!");return _.chunks[e]})),!a&&r||(o=r=1,r=this.getter(0).length,o=r,out("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=r,this._chunkSize=o,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var o=new a;Object.defineProperties(o,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var _={isDevice:!1,contents:o}}else _={isDevice:!1,url:i};var s=FS.createFile(e,t,_,r,n);_.contents?s.contents=_.contents:_.url&&(s.contents=null,s.url=_.url),Object.defineProperties(s,{usedBytes:{get:function(){return this.contents.length}}});var u={};return Object.keys(s.stream_ops).forEach((function(e){var t=s.stream_ops[e];u[e]=function(){if(!FS.forceLoadFile(s))throw new FS.ErrnoError(29);return t.apply(null,arguments)}})),u.read=function(e,t,i,r,n){if(!FS.forceLoadFile(s))throw new FS.ErrnoError(29);var a=e.node.contents;if(n>=a.length)return 0;var o=Math.min(a.length-n,r);if(assert(o>=0),a.slice)for(var _=0;_<o;_++)t[i+_]=a[n+_];else for(_=0;_<o;_++)t[i+_]=a.get(n+_);return o},s.stream_ops=u,s},createPreloadedFile:function(e,t,i,r,n,a,o,_,s,u){Browser.init();var l=t?PATH_FS.resolve(PATH.join2(e,t)):e,d=getUniqueRunDependency("cp "+l);function m(i){function m(i){u&&u(),_||FS.createDataFile(e,t,i,r,n,s),a&&a(),removeRunDependency(d)}var c=!1;Module.preloadPlugins.forEach((function(e){c||e.canHandle(l)&&(e.handle(i,l,m,(function(){o&&o(),removeRunDependency(d)})),c=!0)})),c||m(i)}addRunDependency(d),"string"==typeof i?Browser.asyncLoad(i,(function(e){m(e)}),o):m(i)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(e,t,i){t=t||function(){},i=i||function(){};var r=FS.indexedDB();try{var n=r.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return i(e)}n.onupgradeneeded=function(){out("creating db"),n.result.createObjectStore(FS.DB_STORE_NAME)},n.onsuccess=function(){var r=n.result.transaction([FS.DB_STORE_NAME],"readwrite"),a=r.objectStore(FS.DB_STORE_NAME),o=0,_=0,s=e.length;function u(){0==_?t():i()}e.forEach((function(e){var t=a.put(FS.analyzePath(e).object.contents,e);t.onsuccess=function(){++o+_==s&&u()},t.onerror=function(){_++,o+_==s&&u()}})),r.onerror=i},n.onerror=i},loadFilesFromDB:function(e,t,i){t=t||function(){},i=i||function(){};var r=FS.indexedDB();try{var n=r.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return i(e)}n.onupgradeneeded=i,n.onsuccess=function(){var r=n.result;try{var a=r.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){return void i(e)}var o=a.objectStore(FS.DB_STORE_NAME),_=0,s=0,u=e.length;function l(){0==s?t():i()}e.forEach((function(e){var t=o.get(e);t.onsuccess=function(){FS.analyzePath(e).exists&&FS.unlink(e),FS.createDataFile(PATH.dirname(e),PATH.basename(e),t.result,!0,!0,!0),++_+s==u&&l()},t.onerror=function(){s++,_+s==u&&l()}})),a.onerror=i},n.onerror=i}},SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,umask:511,calculateAt:function(e,t){if("/"!==t[0]){var i;if(-100===e)i=FS.cwd();else{var r=FS.getStream(e);if(!r)throw new FS.ErrnoError(8);i=r.path}t=PATH.join2(i,t)}return t},doStat:function(e,t,i){try{var r=e(t)}catch(e){if(e&&e.node&&PATH.normalize(t)!==PATH.normalize(FS.getPath(e.node)))return-54;throw e}return HEAP32[i>>2]=r.dev,HEAP32[i+4>>2]=0,HEAP32[i+8>>2]=r.ino,HEAP32[i+12>>2]=r.mode,HEAP32[i+16>>2]=r.nlink,HEAP32[i+20>>2]=r.uid,HEAP32[i+24>>2]=r.gid,HEAP32[i+28>>2]=r.rdev,HEAP32[i+32>>2]=0,tempI64=[r.size>>>0,(tempDouble=r.size,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[i+40>>2]=tempI64[0],HEAP32[i+44>>2]=tempI64[1],HEAP32[i+48>>2]=4096,HEAP32[i+52>>2]=r.blocks,HEAP32[i+56>>2]=r.atime.getTime()/1e3|0,HEAP32[i+60>>2]=0,HEAP32[i+64>>2]=r.mtime.getTime()/1e3|0,HEAP32[i+68>>2]=0,HEAP32[i+72>>2]=r.ctime.getTime()/1e3|0,HEAP32[i+76>>2]=0,tempI64=[r.ino>>>0,(tempDouble=r.ino,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[i+80>>2]=tempI64[0],HEAP32[i+84>>2]=tempI64[1],0},doMsync:function(e,t,i,r,n){var a=HEAPU8.slice(e,e+i);FS.msync(t,a,n,i,r)},doMkdir:function(e,t){return"/"===(e=PATH.normalize(e))[e.length-1]&&(e=e.substr(0,e.length-1)),FS.mkdir(e,t,0),0},doMknod:function(e,t,i){switch(61440&t){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}return FS.mknod(e,t,i),0},doReadlink:function(e,t,i){if(i<=0)return-28;var r=FS.readlink(e),n=Math.min(i,lengthBytesUTF8(r)),a=HEAP8[t+n];return stringToUTF8(r,t,i+1),HEAP8[t+n]=a,n},doAccess:function(e,t){if(-8&t)return-28;var i;if(!(i=FS.lookupPath(e,{follow:!0}).node))return-44;var r="";return 4&t&&(r+="r"),2&t&&(r+="w"),1&t&&(r+="x"),r&&FS.nodePermissions(i,r)?-2:0},doDup:function(e,t,i){var r=FS.getStream(i);return r&&FS.close(r),FS.open(e,t,0,i,i).fd},doReadv:function(e,t,i,r){for(var n=0,a=0;a<i;a++){var o=HEAP32[t+8*a>>2],_=HEAP32[t+(8*a+4)>>2],s=FS.read(e,HEAP8,o,_,r);if(s<0)return-1;if(n+=s,s<_)break}return n},doWritev:function(e,t,i,r){for(var n=0,a=0;a<i;a++){var o=HEAP32[t+8*a>>2],_=HEAP32[t+(8*a+4)>>2],s=FS.write(e,HEAP8,o,_,r);if(s<0)return-1;n+=s}return n},varargs:void 0,get:function(){return assert(null!=SYSCALLS.varargs),SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>2]},getStr:function(e){return UTF8ToString(e)},getStreamFromFD:function(e){var t=FS.getStream(e);if(!t)throw new FS.ErrnoError(8);return t},get64:function(e,t){return assert(e>=0?0===t:-1===t),e}};function ___sys_fcntl64(e,t,i){SYSCALLS.varargs=i;try{var r=SYSCALLS.getStreamFromFD(e);switch(t){case 0:return(n=SYSCALLS.get())<0?-28:FS.open(r.path,r.flags,0,n).fd;case 1:case 2:return 0;case 3:return r.flags;case 4:var n=SYSCALLS.get();return r.flags|=n,0;case 12:return n=SYSCALLS.get(),HEAP16[n+0>>1]=2,0;case 13:case 14:return 0;case 16:case 8:return-28;case 9:return setErrNo(28),-1;default:return-28}}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___sys_fstat64(e,t){try{var i=SYSCALLS.getStreamFromFD(e);return SYSCALLS.doStat(FS.stat,i.path,t)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___sys_getdents64(e,t,i){try{var r=SYSCALLS.getStreamFromFD(e);r.getdents||(r.getdents=FS.readdir(r.path));for(var n=280,a=0,o=FS.llseek(r,0,1),_=Math.floor(o/n);_<r.getdents.length&&a+n<=i;){var s,u,l=r.getdents[_];if("."===l[0])s=1,u=4;else{var d=FS.lookupNode(r.node,l);s=d.id,u=FS.isChrdev(d.mode)?2:FS.isDir(d.mode)?4:FS.isLink(d.mode)?10:8}tempI64=[s>>>0,(tempDouble=s,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[t+a>>2]=tempI64[0],HEAP32[t+a+4>>2]=tempI64[1],tempI64=[(_+1)*n>>>0,(tempDouble=(_+1)*n,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[t+a+8>>2]=tempI64[0],HEAP32[t+a+12>>2]=tempI64[1],HEAP16[t+a+16>>1]=280,HEAP8[t+a+18>>0]=u,stringToUTF8(l,t+a+19,256),a+=n,_+=1}return FS.llseek(r,_*n,0),a}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___sys_ioctl(e,t,i){SYSCALLS.varargs=i;try{var r=SYSCALLS.getStreamFromFD(e);switch(t){case 21509:case 21505:return r.tty?0:-59;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return r.tty?0:-59;case 21519:if(!r.tty)return-59;var n=SYSCALLS.get();return HEAP32[n>>2]=0,0;case 21520:return r.tty?-28:-59;case 21531:return n=SYSCALLS.get(),FS.ioctl(r,t,n);case 21523:case 21524:return r.tty?0:-59;default:abort("bad ioctl syscall "+t)}}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___sys_open(e,t,i){SYSCALLS.varargs=i;try{var r=SYSCALLS.getStr(e),n=SYSCALLS.get();return FS.open(r,t,n).fd}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___sys_stat64(e,t){try{return e=SYSCALLS.getStr(e),SYSCALLS.doStat(FS.stat,e,t)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function _abort(){abort()}var _abs=Math_abs;function _emscripten_get_sbrk_ptr(){return 1301504}function _emscripten_memcpy_big(e,t,i){HEAPU8.copyWithin(e,t,t+i)}function _emscripten_get_heap_size(){return HEAPU8.length}function abortOnCannotGrowMemory(e){abort("Cannot enlarge memory arrays to size "+e+" bytes (OOM). Either (1) compile with  -s INITIAL_MEMORY=X  with X higher than the current value "+HEAP8.length+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function _emscripten_resize_heap(e){abortOnCannotGrowMemory(e>>>=0)}var ENV={};function __getExecutableName(){return thisProgram||"./this.program"}function getEnvStrings(){if(!getEnvStrings.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:__getExecutableName()};for(var t in ENV)e[t]=ENV[t];var i=[];for(var t in e)i.push(t+"="+e[t]);getEnvStrings.strings=i}return getEnvStrings.strings}function _environ_get(e,t){var i=0;return getEnvStrings().forEach((function(r,n){var a=t+i;HEAP32[e+4*n>>2]=a,writeAsciiToMemory(r,a),i+=r.length+1})),0}function _environ_sizes_get(e,t){var i=getEnvStrings();HEAP32[e>>2]=i.length;var r=0;return i.forEach((function(e){r+=e.length+1})),HEAP32[t>>2]=r,0}function _exit(e){exit(e)}function _fd_close(e){try{var t=SYSCALLS.getStreamFromFD(e);return FS.close(t),0}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),e.errno}}function _fd_fdstat_get(e,t){try{var i=SYSCALLS.getStreamFromFD(e),r=i.tty?2:FS.isDir(i.mode)?3:FS.isLink(i.mode)?7:4;return HEAP8[t>>0]=r,0}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),e.errno}}function _fd_read(e,t,i,r){try{var n=SYSCALLS.getStreamFromFD(e),a=SYSCALLS.doReadv(n,t,i);return HEAP32[r>>2]=a,0}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),e.errno}}function _fd_seek(e,t,i,r,n){try{var a=SYSCALLS.getStreamFromFD(e),o=4294967296*i+(t>>>0),_=9007199254740992;return o<=-_||o>=_?-61:(FS.llseek(a,o,r),tempI64=[a.position>>>0,(tempDouble=a.position,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[n>>2]=tempI64[0],HEAP32[n+4>>2]=tempI64[1],a.getdents&&0===o&&0===r&&(a.getdents=null),0)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),e.errno}}function _fd_write(e,t,i,r){try{var n=SYSCALLS.getStreamFromFD(e),a=SYSCALLS.doWritev(n,t,i);return HEAP32[r>>2]=a,0}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),e.errno}}var ___tm_current=1301520,___tm_timezone=(stringToUTF8("GMT",1301568,4),1301568);function _tzset(){if(!_tzset.called){_tzset.called=!0,HEAP32[__get_timezone()>>2]=60*(new Date).getTimezoneOffset();var e=(new Date).getFullYear(),t=new Date(e,0,1),i=new Date(e,6,1);HEAP32[__get_daylight()>>2]=Number(t.getTimezoneOffset()!=i.getTimezoneOffset());var r=_(t),n=_(i),a=allocateUTF8(r),o=allocateUTF8(n);i.getTimezoneOffset()<t.getTimezoneOffset()?(HEAP32[__get_tzname()>>2]=a,HEAP32[__get_tzname()+4>>2]=o):(HEAP32[__get_tzname()>>2]=o,HEAP32[__get_tzname()+4>>2]=a)}function _(e){var t=e.toTimeString().match(/\(([A-Za-z ]+)\)$/);return t?t[1]:"GMT"}}function _localtime_r(e,t){_tzset();var i=new Date(1e3*HEAP32[e>>2]);HEAP32[t>>2]=i.getSeconds(),HEAP32[t+4>>2]=i.getMinutes(),HEAP32[t+8>>2]=i.getHours(),HEAP32[t+12>>2]=i.getDate(),HEAP32[t+16>>2]=i.getMonth(),HEAP32[t+20>>2]=i.getFullYear()-1900,HEAP32[t+24>>2]=i.getDay();var r=new Date(i.getFullYear(),0,1),n=(i.getTime()-r.getTime())/864e5|0;HEAP32[t+28>>2]=n,HEAP32[t+36>>2]=-60*i.getTimezoneOffset();var a=new Date(i.getFullYear(),6,1).getTimezoneOffset(),o=r.getTimezoneOffset(),_=0|(a!=o&&i.getTimezoneOffset()==Math.min(o,a));HEAP32[t+32>>2]=_;var s=HEAP32[__get_tzname()+(_?4:0)>>2];return HEAP32[t+40>>2]=s,t}function _localtime(e){return _localtime_r(e,___tm_current)}function _setTempRet0(e){setTempRet0(0|e)}function _time(e){var t=Date.now()/1e3|0;return e&&(HEAP32[e>>2]=t),t}var FSNode=function(e,t,i,r){e||(e=this),this.parent=e,this.mount=e.mount,this.mounted=null,this.id=FS.nextInode++,this.name=t,this.mode=i,this.node_ops={},this.stream_ops={},this.rdev=r},readMode=365,writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(e){e?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(e){e?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}}),FS.FSNode=FSNode,FS.staticInit();var ASSERTIONS=!0;function intArrayFromString(e,t,i){var r=i>0?i:lengthBytesUTF8(e)+1,n=new Array(r),a=stringToUTF8Array(e,n,0,n.length);return t&&(n.length=a),n}function intArrayToString(e){for(var t=[],i=0;i<e.length;i++){var r=e[i];r>255&&(ASSERTIONS&&assert(!1,"Character code "+r+" ("+String.fromCharCode(r)+")  at offset "+i+" not in 0x00-0xFF."),r&=255),t.push(String.fromCharCode(r))}return t.join("")}var asmGlobalArg={},asmLibraryArg={__assert_fail:___assert_fail,__handle_stack_overflow:___handle_stack_overflow,__sys_fcntl64:___sys_fcntl64,__sys_fstat64:___sys_fstat64,__sys_getdents64:___sys_getdents64,__sys_ioctl:___sys_ioctl,__sys_open:___sys_open,__sys_stat64:___sys_stat64,abort:_abort,abs:_abs,emscripten_get_sbrk_ptr:_emscripten_get_sbrk_ptr,emscripten_memcpy_big:_emscripten_memcpy_big,emscripten_resize_heap:_emscripten_resize_heap,environ_get:_environ_get,environ_sizes_get:_environ_sizes_get,exit:_exit,fd_close:_fd_close,fd_fdstat_get:_fd_fdstat_get,fd_read:_fd_read,fd_seek:_fd_seek,fd_write:_fd_write,localtime:_localtime,memory:wasmMemory,setTempRet0:_setTempRet0,table:wasmTable,time:_time},asm=createWasm();Module.asm=asm;var calledRun,___wasm_call_ctors=Module.___wasm_call_ctors=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.__wasm_call_ctors.apply(null,arguments)},_AT_test_fun=Module._AT_test_fun=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_test_fun.apply(null,arguments)},_AT_run_CPPSC_method=Module._AT_run_CPPSC_method=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_run_CPPSC_method.apply(null,arguments)},_AT_run_CPPSS_method=Module._AT_run_CPPSS_method=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_run_CPPSS_method.apply(null,arguments)},_AT_GSM_sample_particle_positions=Module._AT_GSM_sample_particle_positions=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_GSM_sample_particle_positions.apply(null,arguments)},_AT_GSM_dose_grid_from_particles_positions=Module._AT_GSM_dose_grid_from_particles_positions=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_GSM_dose_grid_from_particles_positions.apply(null,arguments)},_AT_GSM_local_dose_distrib_from_dose_grid=Module._AT_GSM_local_dose_distrib_from_dose_grid=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_GSM_local_dose_distrib_from_dose_grid.apply(null,arguments)},_AT_GSM_response_grid_from_dose_grid=Module._AT_GSM_response_grid_from_dose_grid=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_GSM_response_grid_from_dose_grid.apply(null,arguments)},_AT_run_GSM_method=Module._AT_run_GSM_method=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_run_GSM_method.apply(null,arguments)},_AT_GSM_multiple_local_dose_distrib=Module._AT_GSM_multiple_local_dose_distrib=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_GSM_multiple_local_dose_distrib.apply(null,arguments)},_AT_GSM_local_dose_distrib=Module._AT_GSM_local_dose_distrib=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_GSM_local_dose_distrib.apply(null,arguments)},_AT_run_IGK_method=Module._AT_run_IGK_method=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_run_IGK_method.apply(null,arguments)},_AT_material_index_from_material_number=Module._AT_material_index_from_material_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_material_index_from_material_number.apply(null,arguments)},_AT_material_name_from_number=Module._AT_material_name_from_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_material_name_from_number.apply(null,arguments)},_AT_material_number_from_name=Module._AT_material_number_from_name=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_material_number_from_name.apply(null,arguments)},_AT_density_g_cm3_from_material_no=Module._AT_density_g_cm3_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_density_g_cm3_from_material_no.apply(null,arguments)},_AT_I_eV_from_material_no=Module._AT_I_eV_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_I_eV_from_material_no.apply(null,arguments)},_AT_alpha_g_cm2_MeV_from_material_no=Module._AT_alpha_g_cm2_MeV_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_alpha_g_cm2_MeV_from_material_no.apply(null,arguments)},_AT_p_MeV_from_material_no=Module._AT_p_MeV_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_p_MeV_from_material_no.apply(null,arguments)},_AT_m_g_cm2_from_material_no=Module._AT_m_g_cm2_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_m_g_cm2_from_material_no.apply(null,arguments)},_AT_average_A_from_material_no=Module._AT_average_A_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_average_A_from_material_no.apply(null,arguments)},_AT_average_Z_from_material_no=Module._AT_average_Z_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_average_Z_from_material_no.apply(null,arguments)},_AT_phase_from_material_no=Module._AT_phase_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_phase_from_material_no.apply(null,arguments)},_AT_get_material_data=Module._AT_get_material_data=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_material_data.apply(null,arguments)},_AT_get_materials_data=Module._AT_get_materials_data=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_materials_data.apply(null,arguments)},_AT_plasma_energy_J_from_material_no=Module._AT_plasma_energy_J_from_material_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_plasma_energy_J_from_material_no.apply(null,arguments)},_AT_electron_density_m3_from_material_no_single=Module._AT_electron_density_m3_from_material_no_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_electron_density_m3_from_material_no_single.apply(null,arguments)},_AT_plasma_energy_J_single=Module._AT_plasma_energy_J_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_plasma_energy_J_single.apply(null,arguments)},_AT_electron_density_m3_single=Module._AT_electron_density_m3_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_electron_density_m3_single.apply(null,arguments)},_AT_electron_density_m3_from_material_no_multi=Module._AT_electron_density_m3_from_material_no_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_electron_density_m3_from_material_no_multi.apply(null,arguments)},_AT_electron_density_m3_multi=Module._AT_electron_density_m3_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_electron_density_m3_multi.apply(null,arguments)},_AT_electron_density_m3_from_composition=Module._AT_electron_density_m3_from_composition=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_electron_density_m3_from_composition.apply(null,arguments)},_AT_average_A_from_composition=Module._AT_average_A_from_composition=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_average_A_from_composition.apply(null,arguments)},_AT_average_Z_from_composition=Module._AT_average_Z_from_composition=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_average_Z_from_composition.apply(null,arguments)},_AT_effective_Z_from_composition=Module._AT_effective_Z_from_composition=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_effective_Z_from_composition.apply(null,arguments)},_AT_I_eV_from_composition=Module._AT_I_eV_from_composition=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_I_eV_from_composition.apply(null,arguments)},_AT_set_user_material=Module._AT_set_user_material=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_set_user_material.apply(null,arguments)},_AT_set_user_material_from_composition=Module._AT_set_user_material_from_composition=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_set_user_material_from_composition.apply(null,arguments)},_AT_particle_no_from_Z_and_A_single=Module._AT_particle_no_from_Z_and_A_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_particle_no_from_Z_and_A_single.apply(null,arguments)},_AT_particle_no_from_Z_and_A=Module._AT_particle_no_from_Z_and_A=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_particle_no_from_Z_and_A.apply(null,arguments)},_AT_A_from_particle_no_single=Module._AT_A_from_particle_no_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_A_from_particle_no_single.apply(null,arguments)},_AT_A_from_particle_no=Module._AT_A_from_particle_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_A_from_particle_no.apply(null,arguments)},_AT_Z_from_particle_no_single=Module._AT_Z_from_particle_no_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Z_from_particle_no_single.apply(null,arguments)},_AT_Z_from_particle_no=Module._AT_Z_from_particle_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Z_from_particle_no.apply(null,arguments)},_AT_atomic_weight_from_Z=Module._AT_atomic_weight_from_Z=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_atomic_weight_from_Z.apply(null,arguments)},_AT_atomic_weight_from_particle_no=Module._AT_atomic_weight_from_particle_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_atomic_weight_from_particle_no.apply(null,arguments)},_AT_I_eV_from_particle_no=Module._AT_I_eV_from_particle_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_I_eV_from_particle_no.apply(null,arguments)},_AT_nuclear_spin_from_particle_no_multi=Module._AT_nuclear_spin_from_particle_no_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_nuclear_spin_from_particle_no_multi.apply(null,arguments)},_AT_nuclear_spin_from_particle_no_single=Module._AT_nuclear_spin_from_particle_no_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_nuclear_spin_from_particle_no_single.apply(null,arguments)},_AT_nuclear_spin_from_Z_and_A=Module._AT_nuclear_spin_from_Z_and_A=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_nuclear_spin_from_Z_and_A.apply(null,arguments)},_AT_particle_name_from_particle_no_single=Module._AT_particle_name_from_particle_no_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_particle_name_from_particle_no_single.apply(null,arguments)},_AT_particle_no_from_particle_name_single=Module._AT_particle_no_from_particle_name_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_particle_no_from_particle_name_single.apply(null,arguments)},_AT_particle_name_from_particle_no=Module._AT_particle_name_from_particle_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_particle_name_from_particle_no.apply(null,arguments)},_AT_particle_no_from_particle_name=Module._AT_particle_no_from_particle_name=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_particle_no_from_particle_name.apply(null,arguments)},_AT_Z_from_element_acronym_single=Module._AT_Z_from_element_acronym_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Z_from_element_acronym_single.apply(null,arguments)},_AT_Z_from_element_acronym=Module._AT_Z_from_element_acronym=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Z_from_element_acronym.apply(null,arguments)},_AT_element_acronym_from_Z_single=Module._AT_element_acronym_from_Z_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_element_acronym_from_Z_single.apply(null,arguments)},_AT_element_acronym_from_Z=Module._AT_element_acronym_from_Z=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_element_acronym_from_Z.apply(null,arguments)},_AT_atomic_weight_from_element_acronym_single=Module._AT_atomic_weight_from_element_acronym_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_atomic_weight_from_element_acronym_single.apply(null,arguments)},_AT_atomic_weight_from_element_acronym=Module._AT_atomic_weight_from_element_acronym=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_atomic_weight_from_element_acronym.apply(null,arguments)},_AT_density_g_cm3_from_element_acronym_single=Module._AT_density_g_cm3_from_element_acronym_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_density_g_cm3_from_element_acronym_single.apply(null,arguments)},_AT_density_g_cm3_from_element_acronym=Module._AT_density_g_cm3_from_element_acronym=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_density_g_cm3_from_element_acronym.apply(null,arguments)},_AT_I_eV_from_element_acronym_single=Module._AT_I_eV_from_element_acronym_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_I_eV_from_element_acronym_single.apply(null,arguments)},_AT_I_eV_from_element_acronym=Module._AT_I_eV_from_element_acronym=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_I_eV_from_element_acronym.apply(null,arguments)},_AT_electron_density_cm3_from_element_acronym_single=Module._AT_electron_density_cm3_from_element_acronym_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_electron_density_cm3_from_element_acronym_single.apply(null,arguments)},_AT_electron_density_cm3_from_element_acronym=Module._AT_electron_density_cm3_from_element_acronym=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_electron_density_cm3_from_element_acronym.apply(null,arguments)},_AT_Stopping_Power_Mass_MeV_cm2_g_int=Module._AT_Stopping_Power_Mass_MeV_cm2_g_int=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Stopping_Power_Mass_MeV_cm2_g_int.apply(null,arguments)},_AT_CSDA_range_g_cm2_single=Module._AT_CSDA_range_g_cm2_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_CSDA_range_g_cm2_single.apply(null,arguments)},_AT_CSDA_range_g_cm2_multi=Module._AT_CSDA_range_g_cm2_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_CSDA_range_g_cm2_multi.apply(null,arguments)},_AT_CSDA_range_difference_solver=Module._AT_CSDA_range_difference_solver=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_CSDA_range_difference_solver.apply(null,arguments)},_AT_CSDA_energy_after_slab_E_MeV_u_single=Module._AT_CSDA_energy_after_slab_E_MeV_u_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_CSDA_energy_after_slab_E_MeV_u_single.apply(null,arguments)},_AT_CSDA_energy_after_slab_E_MeV_u_multi=Module._AT_CSDA_energy_after_slab_E_MeV_u_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_CSDA_energy_after_slab_E_MeV_u_multi.apply(null,arguments)},_AT_WEPL_single=Module._AT_WEPL_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_WEPL_single.apply(null,arguments)},_AT_WEPL_multi=Module._AT_WEPL_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_WEPL_multi.apply(null,arguments)},_AT_ER_ButtsKatz_range_g_cm2=Module._AT_ER_ButtsKatz_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_ButtsKatz_range_g_cm2.apply(null,arguments)},_AT_ER_Waligorski_range_g_cm2=Module._AT_ER_Waligorski_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_Waligorski_range_g_cm2.apply(null,arguments)},_AT_ER_Edmund_range_g_cm2=Module._AT_ER_Edmund_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_Edmund_range_g_cm2.apply(null,arguments)},_AT_ER_Geiss_range_g_cm2=Module._AT_ER_Geiss_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_Geiss_range_g_cm2.apply(null,arguments)},_AT_ER_Scholz_range_g_cm2=Module._AT_ER_Scholz_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_Scholz_range_g_cm2.apply(null,arguments)},_AT_ER_Scholz_new_range_g_cm2=Module._AT_ER_Scholz_new_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_Scholz_new_range_g_cm2.apply(null,arguments)},_AT_ER_Tabata_range_g_cm2=Module._AT_ER_Tabata_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_Tabata_range_g_cm2.apply(null,arguments)},_AT_ER_PowerLaw_alpha=Module._AT_ER_PowerLaw_alpha=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_PowerLaw_alpha.apply(null,arguments)},_AT_ER_Tabata_constants=Module._AT_ER_Tabata_constants=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_Tabata_constants.apply(null,arguments)},_AT_ER_AM_RadDiff_range_g_cm2=Module._AT_ER_AM_RadDiff_range_g_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ER_AM_RadDiff_range_g_cm2.apply(null,arguments)},_AT_max_electron_ranges_m=Module._AT_max_electron_ranges_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_electron_ranges_m.apply(null,arguments)},_AT_max_electron_range_m=Module._AT_max_electron_range_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_electron_range_m.apply(null,arguments)},_AT_xi_keV=Module._AT_xi_keV=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_xi_keV.apply(null,arguments)},_AT_mean_energy_loss_keV=Module._AT_mean_energy_loss_keV=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_mean_energy_loss_keV.apply(null,arguments)},_AT_kappa_single=Module._AT_kappa_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_kappa_single.apply(null,arguments)},_AT_kappa_multi=Module._AT_kappa_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_kappa_multi.apply(null,arguments)},_AT_Landau_PDF=Module._AT_Landau_PDF=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Landau_PDF.apply(null,arguments)},_AT_Landau_IDF=Module._AT_Landau_IDF=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Landau_IDF.apply(null,arguments)},_AT_lambda_mean_multi=Module._AT_lambda_mean_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_mean_multi.apply(null,arguments)},_AT_lambda_mean_single=Module._AT_lambda_mean_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_mean_single.apply(null,arguments)},_AT_lambda_max_multi=Module._AT_lambda_max_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_max_multi.apply(null,arguments)},_AT_lambda_max_single=Module._AT_lambda_max_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_max_single.apply(null,arguments)},_AT_lambda_landau_from_energy_loss_single=Module._AT_lambda_landau_from_energy_loss_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_landau_from_energy_loss_single.apply(null,arguments)},_AT_lambda_landau_from_energy_loss_multi=Module._AT_lambda_landau_from_energy_loss_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_landau_from_energy_loss_multi.apply(null,arguments)},_AT_energy_loss_from_lambda_landau_single=Module._AT_energy_loss_from_lambda_landau_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_from_lambda_landau_single.apply(null,arguments)},_AT_energy_loss_from_lambda_landau_multi=Module._AT_energy_loss_from_lambda_landau_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_from_lambda_landau_multi.apply(null,arguments)},_AT_energy_loss_from_lambda_vavilov_multi=Module._AT_energy_loss_from_lambda_vavilov_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_from_lambda_vavilov_multi.apply(null,arguments)},_AT_Landau_energy_loss_distribution=Module._AT_Landau_energy_loss_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Landau_energy_loss_distribution.apply(null,arguments)},_AT_Vavilov_PDF=Module._AT_Vavilov_PDF=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Vavilov_PDF.apply(null,arguments)},_AT_Vavilov_IDF=Module._AT_Vavilov_IDF=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Vavilov_IDF.apply(null,arguments)},_AT_lambda_vavilov_from_energy_loss_single=Module._AT_lambda_vavilov_from_energy_loss_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_vavilov_from_energy_loss_single.apply(null,arguments)},_AT_lambda_vavilov_from_energy_loss_multi=Module._AT_lambda_vavilov_from_energy_loss_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_vavilov_from_energy_loss_multi.apply(null,arguments)},_AT_Vavilov_energy_loss_distribution=Module._AT_Vavilov_energy_loss_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Vavilov_energy_loss_distribution.apply(null,arguments)},_AT_energy_loss_distribution=Module._AT_energy_loss_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_distribution.apply(null,arguments)},_AT_Gauss_energy_loss_distribution=Module._AT_Gauss_energy_loss_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gauss_energy_loss_distribution.apply(null,arguments)},_AT_Gauss_PDF=Module._AT_Gauss_PDF=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gauss_PDF.apply(null,arguments)},_AT_lambda_Vavilov_Mode=Module._AT_lambda_Vavilov_Mode=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Vavilov_Mode.apply(null,arguments)},_AT_lambda_Vavilov_FWHM_left=Module._AT_lambda_Vavilov_FWHM_left=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Vavilov_FWHM_left.apply(null,arguments)},_AT_lambda_Vavilov_FWHM_right=Module._AT_lambda_Vavilov_FWHM_right=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Vavilov_FWHM_right.apply(null,arguments)},_AT_lambda_Vavilov_FWHM=Module._AT_lambda_Vavilov_FWHM=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Vavilov_FWHM.apply(null,arguments)},_AT_lambda_Landau_FWHM_left=Module._AT_lambda_Landau_FWHM_left=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Landau_FWHM_left.apply(null,arguments)},_AT_energy_loss_keV_Vavilov_FWHM=Module._AT_energy_loss_keV_Vavilov_FWHM=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_keV_Vavilov_FWHM.apply(null,arguments)},_AT_lambda_Vavilov_Mean=Module._AT_lambda_Vavilov_Mean=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Vavilov_Mean.apply(null,arguments)},_AT_lambda_Vavilov_Variance=Module._AT_lambda_Vavilov_Variance=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Vavilov_Variance.apply(null,arguments)},_AT_lambda_Vavilov_Skewness=Module._AT_lambda_Vavilov_Skewness=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Vavilov_Skewness.apply(null,arguments)},_AT_lambda_Landau_Mode=Module._AT_lambda_Landau_Mode=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Landau_Mode.apply(null,arguments)},_AT_energy_loss_keV_Landau_Mode=Module._AT_energy_loss_keV_Landau_Mode=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_keV_Landau_Mode.apply(null,arguments)},_AT_lambda_Landau_FWHM_right=Module._AT_lambda_Landau_FWHM_right=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Landau_FWHM_right.apply(null,arguments)},_AT_lambda_Landau_FWHM=Module._AT_lambda_Landau_FWHM=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Landau_FWHM.apply(null,arguments)},_AT_energy_loss_keV_Landau_FWHM=Module._AT_energy_loss_keV_Landau_FWHM=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_keV_Landau_FWHM.apply(null,arguments)},_AT_lambda_Landau_Mean=Module._AT_lambda_Landau_Mean=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_lambda_Landau_Mean.apply(null,arguments)},_AT_Gauss_IDF=Module._AT_Gauss_IDF=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gauss_IDF.apply(null,arguments)},_AT_energy_loss_from_lambda_gauss_multi=Module._AT_energy_loss_from_lambda_gauss_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_from_lambda_gauss_multi.apply(null,arguments)},_AT_Gauss_Mode=Module._AT_Gauss_Mode=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gauss_Mode.apply(null,arguments)},_AT_Gauss_Mean=Module._AT_Gauss_Mean=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gauss_Mean.apply(null,arguments)},_AT_Gauss_FWHM=Module._AT_Gauss_FWHM=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gauss_FWHM.apply(null,arguments)},_AT_energy_loss_mode=Module._AT_energy_loss_mode=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_mode.apply(null,arguments)},_AT_energy_loss_FWHM=Module._AT_energy_loss_FWHM=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_loss_FWHM.apply(null,arguments)},_AT_get_error_msg=Module._AT_get_error_msg=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_error_msg.apply(null,arguments)},_AT_check_energy_range_single_particle=Module._AT_check_energy_range_single_particle=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_check_energy_range_single_particle.apply(null,arguments)},_AT_check_energy_range_single_field=Module._AT_check_energy_range_single_field=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_check_energy_range_single_field.apply(null,arguments)},_AT_check_particle_no_single_particle=Module._AT_check_particle_no_single_particle=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_check_particle_no_single_particle.apply(null,arguments)},_AT_check_particle_no_single_field=Module._AT_check_particle_no_single_field=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_check_particle_no_single_field.apply(null,arguments)},_AT_Gamma_index_from_material_number=Module._AT_Gamma_index_from_material_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gamma_index_from_material_number.apply(null,arguments)},_AT_Gamma_name_from_number=Module._AT_Gamma_name_from_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gamma_name_from_number.apply(null,arguments)},_AT_Gamma_number_of_parameters=Module._AT_Gamma_number_of_parameters=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Gamma_number_of_parameters.apply(null,arguments)},_AT_gamma_response=Module._AT_gamma_response=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_gamma_response.apply(null,arguments)},_AT_get_gamma_response_for_average_dose=Module._AT_get_gamma_response_for_average_dose=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_gamma_response_for_average_dose.apply(null,arguments)},_AT_get_response_distribution_from_dose_distribution=Module._AT_get_response_distribution_from_dose_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_response_distribution_from_dose_distribution.apply(null,arguments)},_AT_get_ion_response_from_response_distribution=Module._AT_get_ion_response_from_response_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_ion_response_from_response_distribution.apply(null,arguments)},_AT_get_ion_response_from_dose_distribution=Module._AT_get_ion_response_from_dose_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_ion_response_from_dose_distribution.apply(null,arguments)},_AT_get_ion_efficiency_from_dose_distribution=Module._AT_get_ion_efficiency_from_dose_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_ion_efficiency_from_dose_distribution.apply(null,arguments)},_AT_get_ion_efficiency_from_response_distribution=Module._AT_get_ion_efficiency_from_response_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_ion_efficiency_from_response_distribution.apply(null,arguments)},_AT_get_gamma_response=Module._AT_get_gamma_response=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_gamma_response.apply(null,arguments)},_AT_histo_linear_left_limit=Module._AT_histo_linear_left_limit=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_linear_left_limit.apply(null,arguments)},_AT_histo_logarithmic_left_limit=Module._AT_histo_logarithmic_left_limit=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_logarithmic_left_limit.apply(null,arguments)},_AT_histo_left_limit=Module._AT_histo_left_limit=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_left_limit.apply(null,arguments)},_AT_histo_left_limits=Module._AT_histo_left_limits=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_left_limits.apply(null,arguments)},_AT_histo_linear_bin_width=Module._AT_histo_linear_bin_width=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_linear_bin_width.apply(null,arguments)},_AT_histo_logarithmic_bin_width=Module._AT_histo_logarithmic_bin_width=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_logarithmic_bin_width.apply(null,arguments)},_AT_histo_bin_width=Module._AT_histo_bin_width=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_bin_width.apply(null,arguments)},_AT_histo_bin_widths=Module._AT_histo_bin_widths=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_bin_widths.apply(null,arguments)},_AT_histo_linear_midpoint=Module._AT_histo_linear_midpoint=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_linear_midpoint.apply(null,arguments)},_AT_histo_logarithmic_midpoint=Module._AT_histo_logarithmic_midpoint=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_logarithmic_midpoint.apply(null,arguments)},_AT_histo_midpoint=Module._AT_histo_midpoint=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_midpoint.apply(null,arguments)},_AT_histo_midpoints=Module._AT_histo_midpoints=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_midpoints.apply(null,arguments)},_AT_histo_linear_step=Module._AT_histo_linear_step=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_linear_step.apply(null,arguments)},_AT_histo_logarithmic_step=Module._AT_histo_logarithmic_step=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_logarithmic_step.apply(null,arguments)},_AT_histo_step=Module._AT_histo_step=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_step.apply(null,arguments)},_AT_histo_linear_n_bins=Module._AT_histo_linear_n_bins=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_linear_n_bins.apply(null,arguments)},_AT_histo_logarithmic_n_bins=Module._AT_histo_logarithmic_n_bins=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_logarithmic_n_bins.apply(null,arguments)},_AT_histo_n_bins=Module._AT_histo_n_bins=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_n_bins.apply(null,arguments)},_AT_histo_linear_bin_no=Module._AT_histo_linear_bin_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_linear_bin_no.apply(null,arguments)},_AT_histo_logarithmic_bin_no=Module._AT_histo_logarithmic_bin_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_logarithmic_bin_no.apply(null,arguments)},_AT_histo_bin_no=Module._AT_histo_bin_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_bin_no.apply(null,arguments)},_AT_histo_add_single=Module._AT_histo_add_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_add_single.apply(null,arguments)},_AT_histo_add_multi=Module._AT_histo_add_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_add_multi.apply(null,arguments)},_AT_histo_sum=Module._AT_histo_sum=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_sum.apply(null,arguments)},_AT_histo_normalize=Module._AT_histo_normalize=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histo_normalize.apply(null,arguments)},_AT_N2_to_step=Module._AT_N2_to_step=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_N2_to_step.apply(null,arguments)},_AT_step_to_N2=Module._AT_step_to_N2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_step_to_N2.apply(null,arguments)},_AT_histoOld_log_bin_width=Module._AT_histoOld_log_bin_width=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histoOld_log_bin_width.apply(null,arguments)},_AT_histoOld_lower_bin_limit=Module._AT_histoOld_lower_bin_limit=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histoOld_lower_bin_limit.apply(null,arguments)},_AT_histoOld_upper_bin_limit=Module._AT_histoOld_upper_bin_limit=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histoOld_upper_bin_limit.apply(null,arguments)},_AT_histoOld_get_bin_width=Module._AT_histoOld_get_bin_width=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histoOld_get_bin_width.apply(null,arguments)},_AT_histoOld_get_bin_widths=Module._AT_histoOld_get_bin_widths=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histoOld_get_bin_widths.apply(null,arguments)},_AT_histoOld_bin_no=Module._AT_histoOld_bin_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_histoOld_bin_no.apply(null,arguments)},_AT_KatzModel_KatzExtTarget_inactivation_probability=Module._AT_KatzModel_KatzExtTarget_inactivation_probability=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_KatzExtTarget_inactivation_probability.apply(null,arguments)},_AT_KatzModel_CucinottaExtTarget_inactivation_probability=Module._AT_KatzModel_CucinottaExtTarget_inactivation_probability=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_CucinottaExtTarget_inactivation_probability.apply(null,arguments)},_AT_KatzModel_inactivation_probability=Module._AT_KatzModel_inactivation_probability=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_inactivation_probability.apply(null,arguments)},_AT_KatzModel_KatzExtTarget_inactivation_cross_section_integrand_m=Module._AT_KatzModel_KatzExtTarget_inactivation_cross_section_integrand_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_KatzExtTarget_inactivation_cross_section_integrand_m.apply(null,arguments)},_AT_KatzModel_KatzExtTarget_inactivation_cross_section_m2=Module._AT_KatzModel_KatzExtTarget_inactivation_cross_section_m2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_KatzExtTarget_inactivation_cross_section_m2.apply(null,arguments)},_AT_KatzModel_CucinottaExtTarget_inactivation_cross_section_integrand_m=Module._AT_KatzModel_CucinottaExtTarget_inactivation_cross_section_integrand_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_CucinottaExtTarget_inactivation_cross_section_integrand_m.apply(null,arguments)},_AT_KatzModel_CucinottaExtTarget_inactivation_cross_section_m2=Module._AT_KatzModel_CucinottaExtTarget_inactivation_cross_section_m2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_CucinottaExtTarget_inactivation_cross_section_m2.apply(null,arguments)},_AT_KatzModel_inactivation_cross_section_m2=Module._AT_KatzModel_inactivation_cross_section_m2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_inactivation_cross_section_m2.apply(null,arguments)},_AT_KatzModel_KatzExtTarget_ButtsKatz_TrackWidth=Module._AT_KatzModel_KatzExtTarget_ButtsKatz_TrackWidth=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_KatzExtTarget_ButtsKatz_TrackWidth.apply(null,arguments)},_AT_KatzModel_KatzExtTarget_Zhang_TrackWidth=Module._AT_KatzModel_KatzExtTarget_Zhang_TrackWidth=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_KatzExtTarget_Zhang_TrackWidth.apply(null,arguments)},_AT_KatzModel_inactivation_cross_section_approximation_m2=Module._AT_KatzModel_inactivation_cross_section_approximation_m2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_inactivation_cross_section_approximation_m2.apply(null,arguments)},_AT_KatzModel_single_field_survival_from_inactivation_cross_section=Module._AT_KatzModel_single_field_survival_from_inactivation_cross_section=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_single_field_survival_from_inactivation_cross_section.apply(null,arguments)},_AT_KatzModel_single_field_survival=Module._AT_KatzModel_single_field_survival=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_single_field_survival.apply(null,arguments)},_AT_KatzModel_mixed_field_survival=Module._AT_KatzModel_mixed_field_survival=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_mixed_field_survival.apply(null,arguments)},_AT_KatzModel_single_field_survival_optimized_for_fluence_vector=Module._AT_KatzModel_single_field_survival_optimized_for_fluence_vector=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_KatzModel_single_field_survival_optimized_for_fluence_vector.apply(null,arguments)},_AT_D_RDD_Gy_int=Module._AT_D_RDD_Gy_int=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_D_RDD_Gy_int.apply(null,arguments)},_AT_sI_int=Module._AT_sI_int=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_sI_int.apply(null,arguments)},_AT_P_RDD=Module._AT_P_RDD=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_P_RDD.apply(null,arguments)},_AT_characteristic_single_scattering_angle_single=Module._AT_characteristic_single_scattering_angle_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_characteristic_single_scattering_angle_single.apply(null,arguments)},_AT_characteristic_single_scattering_angle=Module._AT_characteristic_single_scattering_angle=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_characteristic_single_scattering_angle.apply(null,arguments)},_AT_screening_angle_single=Module._AT_screening_angle_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_screening_angle_single.apply(null,arguments)},_AT_screening_angle=Module._AT_screening_angle=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_screening_angle.apply(null,arguments)},_AT_effective_collision_number_single=Module._AT_effective_collision_number_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_effective_collision_number_single.apply(null,arguments)},_AT_effective_collision_number=Module._AT_effective_collision_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_effective_collision_number.apply(null,arguments)},_AT_reduced_target_thickness_single=Module._AT_reduced_target_thickness_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_reduced_target_thickness_single.apply(null,arguments)},_AT_reduced_target_thickness=Module._AT_reduced_target_thickness=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_reduced_target_thickness.apply(null,arguments)},_AT_characteristic_multiple_scattering_angle_single=Module._AT_characteristic_multiple_scattering_angle_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_characteristic_multiple_scattering_angle_single.apply(null,arguments)},_AT_characteristic_multiple_scattering_angle=Module._AT_characteristic_multiple_scattering_angle=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_characteristic_multiple_scattering_angle.apply(null,arguments)},_AT_Moliere_function_f0=Module._AT_Moliere_function_f0=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Moliere_function_f0.apply(null,arguments)},_AT_Moliere_function_f1=Module._AT_Moliere_function_f1=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Moliere_function_f1.apply(null,arguments)},_AT_Moliere_function_f2=Module._AT_Moliere_function_f2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Moliere_function_f2.apply(null,arguments)},_AT_scattering_angle_distribution_single=Module._AT_scattering_angle_distribution_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_scattering_angle_distribution_single.apply(null,arguments)},_AT_scattering_angle_distribution=Module._AT_scattering_angle_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_scattering_angle_distribution.apply(null,arguments)},_AT_Highland_angle_single=Module._AT_Highland_angle_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Highland_angle_single.apply(null,arguments)},_AT_Highland_angle=Module._AT_Highland_angle=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Highland_angle.apply(null,arguments)},_AT_range_straggling_convolution=Module._AT_range_straggling_convolution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_range_straggling_convolution.apply(null,arguments)},_AT_gamma_=Module._AT_gamma_=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_gamma_.apply(null,arguments)},_AT_Dyx=Module._AT_Dyx=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Dyx.apply(null,arguments)},_AT_sum=Module._AT_sum=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_sum.apply(null,arguments)},_AT_normalize=Module._AT_normalize=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_normalize.apply(null,arguments)},_AT_get_interpolated_y_from_input_table=Module._AT_get_interpolated_y_from_input_table=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_interpolated_y_from_input_table.apply(null,arguments)},_AT_get_interpolated_y_from_interval=Module._AT_get_interpolated_y_from_interval=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_interpolated_y_from_interval.apply(null,arguments)},_AT_get_interpolated_y_from_input_2d_table=Module._AT_get_interpolated_y_from_input_2d_table=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_interpolated_y_from_input_2d_table.apply(null,arguments)},_AT_get_interpolated_x_from_input_2d_table=Module._AT_get_interpolated_x_from_input_2d_table=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_interpolated_x_from_input_2d_table.apply(null,arguments)},_AT_E_MeV_u_from_E_MeV=Module._AT_E_MeV_u_from_E_MeV=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_MeV_u_from_E_MeV.apply(null,arguments)},_AT_E_MeV_from_E_MeV_u=Module._AT_E_MeV_from_E_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_MeV_from_E_MeV_u.apply(null,arguments)},_AT_beta_from_E_single=Module._AT_beta_from_E_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_beta_from_E_single.apply(null,arguments)},_AT_gamma_from_E_single=Module._AT_gamma_from_E_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_gamma_from_E_single.apply(null,arguments)},_AT_beta_from_E=Module._AT_beta_from_E=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_beta_from_E.apply(null,arguments)},_AT_gamma_from_E=Module._AT_gamma_from_E=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_gamma_from_E.apply(null,arguments)},_AT_E_from_beta_single=Module._AT_E_from_beta_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_from_beta_single.apply(null,arguments)},_AT_E_from_gamma_single=Module._AT_E_from_gamma_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_from_gamma_single.apply(null,arguments)},_AT_E_from_beta=Module._AT_E_from_beta=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_from_beta.apply(null,arguments)},_AT_E_from_gamma=Module._AT_E_from_gamma=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_from_gamma.apply(null,arguments)},_AT_E_MeV_u_from_momentum_single=Module._AT_E_MeV_u_from_momentum_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_MeV_u_from_momentum_single.apply(null,arguments)},_AT_E_MeV_u_from_momentum_MeV_c_u=Module._AT_E_MeV_u_from_momentum_MeV_c_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_MeV_u_from_momentum_MeV_c_u.apply(null,arguments)},_AT_effective_charge_from_beta_single=Module._AT_effective_charge_from_beta_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_effective_charge_from_beta_single.apply(null,arguments)},_AT_effective_charge_from_beta=Module._AT_effective_charge_from_beta=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_effective_charge_from_beta.apply(null,arguments)},_AT_effective_charge_from_E_MeV_u_single=Module._AT_effective_charge_from_E_MeV_u_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_effective_charge_from_E_MeV_u_single.apply(null,arguments)},_AT_effective_charge_from_E_MeV_u=Module._AT_effective_charge_from_E_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_effective_charge_from_E_MeV_u.apply(null,arguments)},_AT_mean_excitation_energy_eV_from_Z_single=Module._AT_mean_excitation_energy_eV_from_Z_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_mean_excitation_energy_eV_from_Z_single.apply(null,arguments)},_AT_mean_excitation_energy_eV_from_Z=Module._AT_mean_excitation_energy_eV_from_Z=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_mean_excitation_energy_eV_from_Z.apply(null,arguments)},_AT_mass_correction_terms_new=Module._AT_mass_correction_terms_new=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_mass_correction_terms_new.apply(null,arguments)},_AT_max_relativistic_E_transfer_MeV_new_single=Module._AT_max_relativistic_E_transfer_MeV_new_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_relativistic_E_transfer_MeV_new_single.apply(null,arguments)},_AT_max_classic_E_transfer_MeV_new_single=Module._AT_max_classic_E_transfer_MeV_new_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_classic_E_transfer_MeV_new_single.apply(null,arguments)},_AT_max_E_transfer_MeV_new_single=Module._AT_max_E_transfer_MeV_new_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_E_transfer_MeV_new_single.apply(null,arguments)},_AT_max_E_transfer_MeV_new=Module._AT_max_E_transfer_MeV_new=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_E_transfer_MeV_new.apply(null,arguments)},_AT_mass_correction_terms=Module._AT_mass_correction_terms=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_mass_correction_terms.apply(null,arguments)},_AT_max_relativistic_E_transfer_MeV_single=Module._AT_max_relativistic_E_transfer_MeV_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_relativistic_E_transfer_MeV_single.apply(null,arguments)},_AT_max_classic_E_transfer_MeV_single=Module._AT_max_classic_E_transfer_MeV_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_classic_E_transfer_MeV_single.apply(null,arguments)},_AT_max_E_transfer_MeV_single=Module._AT_max_E_transfer_MeV_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_E_transfer_MeV_single.apply(null,arguments)},_AT_max_E_transfer_MeV=Module._AT_max_E_transfer_MeV=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_E_transfer_MeV.apply(null,arguments)},_AT_momentum_from_E_MeV_c_u_single=Module._AT_momentum_from_E_MeV_c_u_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_momentum_from_E_MeV_c_u_single.apply(null,arguments)},_AT_momentum_MeV_c_u_from_E_MeV_u=Module._AT_momentum_MeV_c_u_from_E_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_momentum_MeV_c_u_from_E_MeV_u.apply(null,arguments)},_AT_energy_straggling_MeV2_cm2_g=Module._AT_energy_straggling_MeV2_cm2_g=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_straggling_MeV2_cm2_g.apply(null,arguments)},_AT_energy_straggling_after_slab_E_MeV_u=Module._AT_energy_straggling_after_slab_E_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_straggling_after_slab_E_MeV_u.apply(null,arguments)},_AT_dose_Gy_from_fluence_cm2_single=Module._AT_dose_Gy_from_fluence_cm2_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_dose_Gy_from_fluence_cm2_single.apply(null,arguments)},_AT_dose_Gy_from_fluence_cm2=Module._AT_dose_Gy_from_fluence_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_dose_Gy_from_fluence_cm2.apply(null,arguments)},_AT_fluence_cm2_from_dose_Gy_single=Module._AT_fluence_cm2_from_dose_Gy_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_fluence_cm2_from_dose_Gy_single.apply(null,arguments)},_AT_fluence_cm2_from_dose_Gy=Module._AT_fluence_cm2_from_dose_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_fluence_cm2_from_dose_Gy.apply(null,arguments)},_AT_interparticleDistance_m=Module._AT_interparticleDistance_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_interparticleDistance_m.apply(null,arguments)},_AT_beam_par_physical_to_technical=Module._AT_beam_par_physical_to_technical=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_beam_par_physical_to_technical.apply(null,arguments)},_AT_beam_par_technical_to_physical=Module._AT_beam_par_technical_to_physical=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_beam_par_technical_to_physical.apply(null,arguments)},_AT_inv_interparticleDistance_Gy=Module._AT_inv_interparticleDistance_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inv_interparticleDistance_Gy.apply(null,arguments)},_AT_single_impact_fluence_cm2_single=Module._AT_single_impact_fluence_cm2_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_single_impact_fluence_cm2_single.apply(null,arguments)},_AT_single_impact_fluence_cm2=Module._AT_single_impact_fluence_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_single_impact_fluence_cm2.apply(null,arguments)},_AT_single_impact_dose_Gy_single=Module._AT_single_impact_dose_Gy_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_single_impact_dose_Gy_single.apply(null,arguments)},_AT_single_impact_dose_Gy=Module._AT_single_impact_dose_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_single_impact_dose_Gy.apply(null,arguments)},_AT_total_D_Gy=Module._AT_total_D_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_total_D_Gy.apply(null,arguments)},_AT_total_fluence_cm2=Module._AT_total_fluence_cm2=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_total_fluence_cm2.apply(null,arguments)},_AT_fluence_weighted_E_MeV_u=Module._AT_fluence_weighted_E_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_fluence_weighted_E_MeV_u.apply(null,arguments)},_AT_dose_weighted_E_MeV_u=Module._AT_dose_weighted_E_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_dose_weighted_E_MeV_u.apply(null,arguments)},_AT_fluence_weighted_LET_MeV_cm2_g=Module._AT_fluence_weighted_LET_MeV_cm2_g=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_fluence_weighted_LET_MeV_cm2_g.apply(null,arguments)},_AT_dose_weighted_LET_MeV_cm2_g=Module._AT_dose_weighted_LET_MeV_cm2_g=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_dose_weighted_LET_MeV_cm2_g.apply(null,arguments)},_AT_stopping_power_ratio=Module._AT_stopping_power_ratio=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_stopping_power_ratio.apply(null,arguments)},_AT_mean_number_of_tracks_contrib=Module._AT_mean_number_of_tracks_contrib=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_mean_number_of_tracks_contrib.apply(null,arguments)},_AT_kinetic_variable_single=Module._AT_kinetic_variable_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_kinetic_variable_single.apply(null,arguments)},_AT_Rutherford_SDCS=Module._AT_Rutherford_SDCS=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Rutherford_SDCS.apply(null,arguments)},_AT_Rutherford_scatter_cross_section=Module._AT_Rutherford_scatter_cross_section=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Rutherford_scatter_cross_section.apply(null,arguments)},_AT_gyroradius_m=Module._AT_gyroradius_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_gyroradius_m.apply(null,arguments)},_AT_range_Bortfeld_cm=Module._AT_range_Bortfeld_cm=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_range_Bortfeld_cm.apply(null,arguments)},_AT_fwhm_Bortfeld_cm=Module._AT_fwhm_Bortfeld_cm=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_fwhm_Bortfeld_cm.apply(null,arguments)},_AT_max_plateau_Bortfeld=Module._AT_max_plateau_Bortfeld=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_max_plateau_Bortfeld.apply(null,arguments)},_AT_energy_Bortfeld_MeV_u=Module._AT_energy_Bortfeld_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_energy_Bortfeld_MeV_u.apply(null,arguments)},_AT_fit_Bortfeld=Module._AT_fit_Bortfeld=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_fit_Bortfeld.apply(null,arguments)},_AT_dose_Bortfeld_Gy_single=Module._AT_dose_Bortfeld_Gy_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_dose_Bortfeld_Gy_single.apply(null,arguments)},_AT_dose_Bortfeld_Gy_multi=Module._AT_dose_Bortfeld_Gy_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_dose_Bortfeld_Gy_multi.apply(null,arguments)},_AT_LET_t_Wilkens_keV_um_single=Module._AT_LET_t_Wilkens_keV_um_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_LET_t_Wilkens_keV_um_single.apply(null,arguments)},_AT_LET_t_Wilkens_keV_um_multi=Module._AT_LET_t_Wilkens_keV_um_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_LET_t_Wilkens_keV_um_multi.apply(null,arguments)},_AT_LET_d_Wilkens_keV_um_single=Module._AT_LET_d_Wilkens_keV_um_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_LET_d_Wilkens_keV_um_single.apply(null,arguments)},_AT_LET_d_Wilkens_keV_um_multi=Module._AT_LET_d_Wilkens_keV_um_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_LET_d_Wilkens_keV_um_multi.apply(null,arguments)},_AT_proton_RBE_single=Module._AT_proton_RBE_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_proton_RBE_single.apply(null,arguments)},_AT_proton_RBE_multi=Module._AT_proton_RBE_multi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_proton_RBE_multi.apply(null,arguments)},_AT_RDD_index_from_RDD_number=Module._AT_RDD_index_from_RDD_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_index_from_RDD_number.apply(null,arguments)},_AT_RDD_name_from_number=Module._AT_RDD_name_from_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_name_from_number.apply(null,arguments)},_AT_RDD_number_from_name=Module._AT_RDD_number_from_name=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_number_from_name.apply(null,arguments)},_AT_RDD_number_of_parameters=Module._AT_RDD_number_of_parameters=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_number_of_parameters.apply(null,arguments)},_AT_RDD_r_min_m=Module._AT_RDD_r_min_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_r_min_m.apply(null,arguments)},_AT_RDD_a0_m=Module._AT_RDD_a0_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_a0_m.apply(null,arguments)},_AT_RDD_precalculated_constant_Gy=Module._AT_RDD_precalculated_constant_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_precalculated_constant_Gy.apply(null,arguments)},_AT_RDD_d_min_Gy=Module._AT_RDD_d_min_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_d_min_Gy.apply(null,arguments)},_AT_RDD_d_max_Gy=Module._AT_RDD_d_max_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_d_max_Gy.apply(null,arguments)},_AT_RDD_f1_parameters_single_field=Module._AT_RDD_f1_parameters_single_field=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_f1_parameters_single_field.apply(null,arguments)},_AT_RDD_f1_parameters_mixed_field=Module._AT_RDD_f1_parameters_mixed_field=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_f1_parameters_mixed_field.apply(null,arguments)},_AT_D_RDD_Gy=Module._AT_D_RDD_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_D_RDD_Gy.apply(null,arguments)},_AT_r_RDD_m=Module._AT_r_RDD_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_r_RDD_m.apply(null,arguments)},_AT_RDD_ExtendedTarget_KatzPoint_integrand_Gy=Module._AT_RDD_ExtendedTarget_KatzPoint_integrand_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_ExtendedTarget_KatzPoint_integrand_Gy.apply(null,arguments)},_AT_RDD_ExtendedTarget_KatzPoint_Gy_by_integration=Module._AT_RDD_ExtendedTarget_KatzPoint_Gy_by_integration=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_ExtendedTarget_KatzPoint_Gy_by_integration.apply(null,arguments)},_AT_RDD_ExtendedTarget_KatzPoint_Gy=Module._AT_RDD_ExtendedTarget_KatzPoint_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_ExtendedTarget_KatzPoint_Gy.apply(null,arguments)},_AT_inverse_RDD_ExtendedTarget_KatzPoint_solver_function_Gy=Module._AT_inverse_RDD_ExtendedTarget_KatzPoint_solver_function_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_ExtendedTarget_KatzPoint_solver_function_Gy.apply(null,arguments)},_AT_inverse_RDD_ExtendedTarget_KatzPoint_m=Module._AT_inverse_RDD_ExtendedTarget_KatzPoint_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_ExtendedTarget_KatzPoint_m.apply(null,arguments)},_AT_RDD_ExtendedTarget_CucinottaPoint_integrand_Gy=Module._AT_RDD_ExtendedTarget_CucinottaPoint_integrand_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_ExtendedTarget_CucinottaPoint_integrand_Gy.apply(null,arguments)},_AT_RDD_ExtendedTarget_CucinottaPoint_Gy_by_integration=Module._AT_RDD_ExtendedTarget_CucinottaPoint_Gy_by_integration=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_ExtendedTarget_CucinottaPoint_Gy_by_integration.apply(null,arguments)},_AT_RDD_ExtendedTarget_CucinottaPoint_Gy=Module._AT_RDD_ExtendedTarget_CucinottaPoint_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_ExtendedTarget_CucinottaPoint_Gy.apply(null,arguments)},_AT_inverse_RDD_ExtendedTarget_CucinottaPoint_solver_function_Gy=Module._AT_inverse_RDD_ExtendedTarget_CucinottaPoint_solver_function_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_ExtendedTarget_CucinottaPoint_solver_function_Gy.apply(null,arguments)},_AT_inverse_RDD_ExtendedTarget_CucinottaPoint_m=Module._AT_inverse_RDD_ExtendedTarget_CucinottaPoint_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_ExtendedTarget_CucinottaPoint_m.apply(null,arguments)},_AT_RDD_Katz_LinearER_Daverage_Gy=Module._AT_RDD_Katz_LinearER_Daverage_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_LinearER_Daverage_Gy.apply(null,arguments)},_AT_RDD_Katz_PowerLawER_DaverageKernel=Module._AT_RDD_Katz_PowerLawER_DaverageKernel=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_PowerLawER_DaverageKernel.apply(null,arguments)},_AT_RDD_Katz_PowerLawER_DaverageKernel_approx=Module._AT_RDD_Katz_PowerLawER_DaverageKernel_approx=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_PowerLawER_DaverageKernel_approx.apply(null,arguments)},_AT_RDD_Katz_PowerLawER_Daverage_Gy=Module._AT_RDD_Katz_PowerLawER_Daverage_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_PowerLawER_Daverage_Gy.apply(null,arguments)},_AT_RDD_Cucinotta_Ddelta_average_integrand_m=Module._AT_RDD_Cucinotta_Ddelta_average_integrand_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_Ddelta_average_integrand_m.apply(null,arguments)},_AT_RDD_Cucinotta_Ddelta_average_Gy=Module._AT_RDD_Cucinotta_Ddelta_average_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_Ddelta_average_Gy.apply(null,arguments)},_AT_RDD_Cucinotta_Dexc_average_Gy=Module._AT_RDD_Cucinotta_Dexc_average_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_Dexc_average_Gy.apply(null,arguments)},_AT_RDD_Cucinotta_Cnorm=Module._AT_RDD_Cucinotta_Cnorm=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_Cnorm.apply(null,arguments)},_AT_RDD_Geiss_average_Gy=Module._AT_RDD_Geiss_average_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Geiss_average_Gy.apply(null,arguments)},_AT_RDD_Katz_LinearER_dEdx_J_m=Module._AT_RDD_Katz_LinearER_dEdx_J_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_LinearER_dEdx_J_m.apply(null,arguments)},_AT_RDD_Katz_PowerLawER_dEdx_J_m=Module._AT_RDD_Katz_PowerLawER_dEdx_J_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_PowerLawER_dEdx_J_m.apply(null,arguments)},_AT_RDD_Katz_LinearER_DSite_Gy=Module._AT_RDD_Katz_LinearER_DSite_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_LinearER_DSite_Gy.apply(null,arguments)},_AT_RDD_Katz_PowerLawER_DSite_Gy=Module._AT_RDD_Katz_PowerLawER_DSite_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_PowerLawER_DSite_Gy.apply(null,arguments)},_AT_RDD_KatzSite_Gy=Module._AT_RDD_KatzSite_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_KatzSite_Gy.apply(null,arguments)},_AT_inverse_RDD_KatzSite_m=Module._AT_inverse_RDD_KatzSite_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_KatzSite_m.apply(null,arguments)},_AT_RDD_Test_Gy=Module._AT_RDD_Test_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Test_Gy.apply(null,arguments)},_AT_inverse_RDD_Test_m=Module._AT_inverse_RDD_Test_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_Test_m.apply(null,arguments)},_AT_RDD_Geiss_Gy=Module._AT_RDD_Geiss_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Geiss_Gy.apply(null,arguments)},_AT_inverse_RDD_Geiss_m=Module._AT_inverse_RDD_Geiss_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_Geiss_m.apply(null,arguments)},_AT_RDD_Katz_coeff_Gy=Module._AT_RDD_Katz_coeff_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_coeff_Gy.apply(null,arguments)},_AT_RDD_Katz_coeff_Gy_general=Module._AT_RDD_Katz_coeff_Gy_general=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_coeff_Gy_general.apply(null,arguments)},_AT_RDD_Katz_LinearER_Dpoint_Gy=Module._AT_RDD_Katz_LinearER_Dpoint_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_LinearER_Dpoint_Gy.apply(null,arguments)},_AT_RDD_Katz_PowerLawER_Dpoint_Gy=Module._AT_RDD_Katz_PowerLawER_Dpoint_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Katz_PowerLawER_Dpoint_Gy.apply(null,arguments)},_AT_RDD_KatzPoint_Gy=Module._AT_RDD_KatzPoint_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_KatzPoint_Gy.apply(null,arguments)},_AT_inverse_RDD_KatzPoint_LinearER_m=Module._AT_inverse_RDD_KatzPoint_LinearER_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_KatzPoint_LinearER_m.apply(null,arguments)},_AT_inverse_RDD_KatzPoint_PowerLawER_solver_function_Gy=Module._AT_inverse_RDD_KatzPoint_PowerLawER_solver_function_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_KatzPoint_PowerLawER_solver_function_Gy.apply(null,arguments)},_AT_inverse_RDD_KatzPoint_m=Module._AT_inverse_RDD_KatzPoint_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_KatzPoint_m.apply(null,arguments)},_AT_RDD_Cucinotta_f_shortRange=Module._AT_RDD_Cucinotta_f_shortRange=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_f_shortRange.apply(null,arguments)},_AT_RDD_Cucinotta_f_longRange=Module._AT_RDD_Cucinotta_f_longRange=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_f_longRange.apply(null,arguments)},_AT_RDD_Cucinotta_Ddelta_Gy=Module._AT_RDD_Cucinotta_Ddelta_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_Ddelta_Gy.apply(null,arguments)},_AT_RDD_Cucinotta_Dexc_Gy=Module._AT_RDD_Cucinotta_Dexc_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_Cucinotta_Dexc_Gy.apply(null,arguments)},_AT_RDD_CucinottaPoint_Gy=Module._AT_RDD_CucinottaPoint_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_CucinottaPoint_Gy.apply(null,arguments)},_AT_inverse_RDD_Cucinotta_solver_function_Gy=Module._AT_inverse_RDD_Cucinotta_solver_function_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_Cucinotta_solver_function_Gy.apply(null,arguments)},_AT_inverse_RDD_Cucinotta_m=Module._AT_inverse_RDD_Cucinotta_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RDD_Cucinotta_m.apply(null,arguments)},_AT_RDD_RadicalDiffusion_get_energy_idx=Module._AT_RDD_RadicalDiffusion_get_energy_idx=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_RadicalDiffusion_get_energy_idx.apply(null,arguments)},_AT_RDD_RadicalDiffusion_Gy=Module._AT_RDD_RadicalDiffusion_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_RDD_RadicalDiffusion_Gy.apply(null,arguments)},_AT_r_min_RadicalDiffusion_m=Module._AT_r_min_RadicalDiffusion_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_r_min_RadicalDiffusion_m.apply(null,arguments)},_AT_d_max_RadicalDiffusion_Gy=Module._AT_d_max_RadicalDiffusion_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_d_max_RadicalDiffusion_Gy.apply(null,arguments)},_AT_r_max_RadicalDiffusion_m=Module._AT_r_max_RadicalDiffusion_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_r_max_RadicalDiffusion_m.apply(null,arguments)},_AT_n_bins_RadicalDiffusion=Module._AT_n_bins_RadicalDiffusion=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_n_bins_RadicalDiffusion.apply(null,arguments)},_AT_inverse_RadicalDiffusion_m=Module._AT_inverse_RadicalDiffusion_m=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_inverse_RadicalDiffusion_m.apply(null,arguments)},_AT_d_min_RadicalDiffusion_Gy=Module._AT_d_min_RadicalDiffusion_Gy=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_d_min_RadicalDiffusion_Gy.apply(null,arguments)},_AT_E_RadicalDiffusion_MeV_u=Module._AT_E_RadicalDiffusion_MeV_u=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_E_RadicalDiffusion_MeV_u.apply(null,arguments)},_AT_SPC_get_number_of_bytes_in_file=Module._AT_SPC_get_number_of_bytes_in_file=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_get_number_of_bytes_in_file.apply(null,arguments)},_AT_SPC_fast_read_buffer=Module._AT_SPC_fast_read_buffer=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_fast_read_buffer.apply(null,arguments)},_AT_SPC_decompose_size=Module._AT_SPC_decompose_size=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_decompose_size.apply(null,arguments)},_AT_SPC_decompose_header=Module._AT_SPC_decompose_header=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_decompose_header.apply(null,arguments)},_AT_SPC_decompose_data=Module._AT_SPC_decompose_data=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_decompose_data.apply(null,arguments)},_AT_SPC_get_number_of_bins_from_filename_fast=Module._AT_SPC_get_number_of_bins_from_filename_fast=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_get_number_of_bins_from_filename_fast.apply(null,arguments)},_AT_SPC_read_header_from_filename_fast=Module._AT_SPC_read_header_from_filename_fast=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_read_header_from_filename_fast.apply(null,arguments)},_AT_SPC_read_data_from_filename_fast=Module._AT_SPC_read_data_from_filename_fast=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_read_data_from_filename_fast.apply(null,arguments)},_AT_SPC_read_from_filename_fast=Module._AT_SPC_read_from_filename_fast=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_read_from_filename_fast.apply(null,arguments)},_AT_SPC_number_of_bins_at_range=Module._AT_SPC_number_of_bins_at_range=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_number_of_bins_at_range.apply(null,arguments)},_AT_SPC_spectrum_at_range=Module._AT_SPC_spectrum_at_range=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SPC_spectrum_at_range.apply(null,arguments)},_AT_Mass_Stopping_Power=Module._AT_Mass_Stopping_Power=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Mass_Stopping_Power.apply(null,arguments)},_AT_Mass_Stopping_Power_with_no=Module._AT_Mass_Stopping_Power_with_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Mass_Stopping_Power_with_no.apply(null,arguments)},_AT_Stopping_Power=Module._AT_Stopping_Power=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Stopping_Power.apply(null,arguments)},_AT_Stopping_Power_with_no=Module._AT_Stopping_Power_with_no=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Stopping_Power_with_no.apply(null,arguments)},_AT_Energy_MeV_u_from_Stopping_Power_single=Module._AT_Energy_MeV_u_from_Stopping_Power_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Energy_MeV_u_from_Stopping_Power_single.apply(null,arguments)},_AT_stopping_power_source_model_name_from_number=Module._AT_stopping_power_source_model_name_from_number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_stopping_power_source_model_name_from_number.apply(null,arguments)},_AT_stopping_power_source_model_number_from_name=Module._AT_stopping_power_source_model_number_from_name=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_stopping_power_source_model_number_from_name.apply(null,arguments)},_AT_Bethe_wrapper=Module._AT_Bethe_wrapper=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Bethe_wrapper.apply(null,arguments)},_AT_Bethe_energy_loss_MeV_cm2_g=Module._AT_Bethe_energy_loss_MeV_cm2_g=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Bethe_energy_loss_MeV_cm2_g.apply(null,arguments)},_AT_Bethe_energy_loss_MeV_cm2_g_single=Module._AT_Bethe_energy_loss_MeV_cm2_g_single=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Bethe_energy_loss_MeV_cm2_g_single.apply(null,arguments)},_AT_el_energy_loss_leading_term_MeV_cm2_g=Module._AT_el_energy_loss_leading_term_MeV_cm2_g=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_el_energy_loss_leading_term_MeV_cm2_g.apply(null,arguments)},_AT_Bethe_Stopping_Number=Module._AT_Bethe_Stopping_Number=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Bethe_Stopping_Number.apply(null,arguments)},_AT_FromFile_wrapper=Module._AT_FromFile_wrapper=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_FromFile_wrapper.apply(null,arguments)},_AT_ICRU_wrapper=Module._AT_ICRU_wrapper=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_ICRU_wrapper.apply(null,arguments)},_AT_PSTAR_wrapper=Module._AT_PSTAR_wrapper=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_PSTAR_wrapper.apply(null,arguments)},_AT_n_bins_for_single_impact_local_dose_distrib=Module._AT_n_bins_for_single_impact_local_dose_distrib=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_n_bins_for_single_impact_local_dose_distrib.apply(null,arguments)},_AT_single_impact_local_dose_distrib=Module._AT_single_impact_local_dose_distrib=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_single_impact_local_dose_distrib.apply(null,arguments)},_AT_n_bins_for_low_fluence_local_dose_distribution=Module._AT_n_bins_for_low_fluence_local_dose_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_n_bins_for_low_fluence_local_dose_distribution.apply(null,arguments)},_AT_low_fluence_local_dose_distribution=Module._AT_low_fluence_local_dose_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_low_fluence_local_dose_distribution.apply(null,arguments)},_AT_Kellerer_normalize=Module._AT_Kellerer_normalize=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Kellerer_normalize.apply(null,arguments)},_AT_Kellerer_interpolation=Module._AT_Kellerer_interpolation=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Kellerer_interpolation.apply(null,arguments)},_AT_Kellerer_reset=Module._AT_Kellerer_reset=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Kellerer_reset.apply(null,arguments)},_AT_Kellerer_zero=Module._AT_Kellerer_zero=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Kellerer_zero.apply(null,arguments)},_AT_Kellerer_shrink=Module._AT_Kellerer_shrink=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Kellerer_shrink.apply(null,arguments)},_AT_Kellerer_folding=Module._AT_Kellerer_folding=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_Kellerer_folding.apply(null,arguments)},_AT_SuccessiveConvolutions=Module._AT_SuccessiveConvolutions=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_SuccessiveConvolutions.apply(null,arguments)},_AT_n_bins_for_DSB_distribution=Module._AT_n_bins_for_DSB_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_n_bins_for_DSB_distribution.apply(null,arguments)},_AT_get_DSB_distribution=Module._AT_get_DSB_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_get_DSB_distribution.apply(null,arguments)},_AT_translate_dose_into_DSB_distribution=Module._AT_translate_dose_into_DSB_distribution=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.AT_translate_dose_into_DSB_distribution.apply(null,arguments)},_fflush=Module._fflush=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.fflush.apply(null,arguments)},___errno_location=Module.___errno_location=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.__errno_location.apply(null,arguments)},__get_tzname=Module.__get_tzname=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm._get_tzname.apply(null,arguments)},__get_daylight=Module.__get_daylight=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm._get_daylight.apply(null,arguments)},__get_timezone=Module.__get_timezone=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm._get_timezone.apply(null,arguments)},_malloc=Module._malloc=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.malloc.apply(null,arguments)},_free=Module._free=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.free.apply(null,arguments)},___set_stack_limit=Module.___set_stack_limit=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.__set_stack_limit.apply(null,arguments)},stackSave=Module.stackSave=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.stackSave.apply(null,arguments)},stackAlloc=Module.stackAlloc=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.stackAlloc.apply(null,arguments)},stackRestore=Module.stackRestore=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.stackRestore.apply(null,arguments)},__growWasmMemory=Module.__growWasmMemory=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.__growWasmMemory.apply(null,arguments)},dynCall_ii=Module.dynCall_ii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_ii.apply(null,arguments)},dynCall_iiii=Module.dynCall_iiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiii.apply(null,arguments)},dynCall_jiji=Module.dynCall_jiji=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_jiji.apply(null,arguments)},dynCall_iidiiii=Module.dynCall_iidiiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iidiiii.apply(null,arguments)},dynCall_vii=Module.dynCall_vii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_vii.apply(null,arguments)},dynCall_iiiiiii=Module.dynCall_iiiiiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiiiiii.apply(null,arguments)},dynCall_viiii=Module.dynCall_viiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_viiii.apply(null,arguments)},dynCall_ddi=Module.dynCall_ddi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_ddi.apply(null,arguments)},dynCall_viddiiii=Module.dynCall_viddiiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_viddiiii.apply(null,arguments)},dynCall_iiidddddd=Module.dynCall_iiidddddd=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiidddddd.apply(null,arguments)},dynCall_iiiiiiiii=Module.dynCall_iiiiiiiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiiiiiiii.apply(null,arguments)},dynCall_iiiidd=Module.dynCall_iiiidd=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiiidd.apply(null,arguments)},dynCall_iiiiii=Module.dynCall_iiiiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiiiii.apply(null,arguments)},dynCall_iii=Module.dynCall_iii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iii.apply(null,arguments)},dynCall_iidii=Module.dynCall_iidii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iidii.apply(null,arguments)},dynCall_iiiii=Module.dynCall_iiiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiiii.apply(null,arguments)},dynCall_vi=Module.dynCall_vi=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_vi.apply(null,arguments)},dynCall_idii=Module.dynCall_idii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_idii.apply(null,arguments)},dynCall_iiiiiiii=Module.dynCall_iiiiiiii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_iiiiiiii.apply(null,arguments)},dynCall_di=Module.dynCall_di=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_di.apply(null,arguments)},dynCall_viii=Module.dynCall_viii=function(){return assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),Module.asm.dynCall_viii.apply(null,arguments)};function ExitStatus(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}Module.asm=asm,Object.getOwnPropertyDescriptor(Module,"intArrayFromString")||(Module.intArrayFromString=function(){abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"intArrayToString")||(Module.intArrayToString=function(){abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Module.ccall=ccall,Module.cwrap=cwrap,Object.getOwnPropertyDescriptor(Module,"setValue")||(Module.setValue=function(){abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getValue")||(Module.getValue=function(){abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"allocate")||(Module.allocate=function(){abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getMemory")||(Module.getMemory=function(){abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"UTF8ArrayToString")||(Module.UTF8ArrayToString=function(){abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"UTF8ToString")||(Module.UTF8ToString=function(){abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stringToUTF8Array")||(Module.stringToUTF8Array=function(){abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stringToUTF8")||(Module.stringToUTF8=function(){abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"lengthBytesUTF8")||(Module.lengthBytesUTF8=function(){abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stackTrace")||(Module.stackTrace=function(){abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"addOnPreRun")||(Module.addOnPreRun=function(){abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"addOnInit")||(Module.addOnInit=function(){abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"addOnPreMain")||(Module.addOnPreMain=function(){abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"addOnExit")||(Module.addOnExit=function(){abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"addOnPostRun")||(Module.addOnPostRun=function(){abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeStringToMemory")||(Module.writeStringToMemory=function(){abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeArrayToMemory")||(Module.writeArrayToMemory=function(){abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeAsciiToMemory")||(Module.writeAsciiToMemory=function(){abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"addRunDependency")||(Module.addRunDependency=function(){abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"removeRunDependency")||(Module.removeRunDependency=function(){abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_createFolder")||(Module.FS_createFolder=function(){abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_createPath")||(Module.FS_createPath=function(){abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_createDataFile")||(Module.FS_createDataFile=function(){abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_createPreloadedFile")||(Module.FS_createPreloadedFile=function(){abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_createLazyFile")||(Module.FS_createLazyFile=function(){abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_createLink")||(Module.FS_createLink=function(){abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_createDevice")||(Module.FS_createDevice=function(){abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"FS_unlink")||(Module.FS_unlink=function(){abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(Module,"dynamicAlloc")||(Module.dynamicAlloc=function(){abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"loadDynamicLibrary")||(Module.loadDynamicLibrary=function(){abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"loadWebAssemblyModule")||(Module.loadWebAssemblyModule=function(){abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getLEB")||(Module.getLEB=function(){abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getFunctionTables")||(Module.getFunctionTables=function(){abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"alignFunctionTables")||(Module.alignFunctionTables=function(){abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"registerFunctions")||(Module.registerFunctions=function(){abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"addFunction")||(Module.addFunction=function(){abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"removeFunction")||(Module.removeFunction=function(){abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getFuncWrapper")||(Module.getFuncWrapper=function(){abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"prettyPrint")||(Module.prettyPrint=function(){abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"makeBigInt")||(Module.makeBigInt=function(){abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"dynCall")||(Module.dynCall=function(){abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getCompilerSetting")||(Module.getCompilerSetting=function(){abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"print")||(Module.print=function(){abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"printErr")||(Module.printErr=function(){abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getTempRet0")||(Module.getTempRet0=function(){abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"setTempRet0")||(Module.setTempRet0=function(){abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"callMain")||(Module.callMain=function(){abort("'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"abort")||(Module.abort=function(){abort("'abort' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stringToNewUTF8")||(Module.stringToNewUTF8=function(){abort("'stringToNewUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"abortOnCannotGrowMemory")||(Module.abortOnCannotGrowMemory=function(){abort("'abortOnCannotGrowMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"emscripten_realloc_buffer")||(Module.emscripten_realloc_buffer=function(){abort("'emscripten_realloc_buffer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"ENV")||(Module.ENV=function(){abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"setjmpId")||(Module.setjmpId=function(){abort("'setjmpId' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"ERRNO_CODES")||(Module.ERRNO_CODES=function(){abort("'ERRNO_CODES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"ERRNO_MESSAGES")||(Module.ERRNO_MESSAGES=function(){abort("'ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"setErrNo")||(Module.setErrNo=function(){abort("'setErrNo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"DNS")||(Module.DNS=function(){abort("'DNS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"GAI_ERRNO_MESSAGES")||(Module.GAI_ERRNO_MESSAGES=function(){abort("'GAI_ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"Protocols")||(Module.Protocols=function(){abort("'Protocols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"Sockets")||(Module.Sockets=function(){abort("'Sockets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"UNWIND_CACHE")||(Module.UNWIND_CACHE=function(){abort("'UNWIND_CACHE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"readAsmConstArgs")||(Module.readAsmConstArgs=function(){abort("'readAsmConstArgs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"jstoi_q")||(Module.jstoi_q=function(){abort("'jstoi_q' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"jstoi_s")||(Module.jstoi_s=function(){abort("'jstoi_s' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"reallyNegative")||(Module.reallyNegative=function(){abort("'reallyNegative' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"formatString")||(Module.formatString=function(){abort("'formatString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"PATH")||(Module.PATH=function(){abort("'PATH' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"PATH_FS")||(Module.PATH_FS=function(){abort("'PATH_FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"SYSCALLS")||(Module.SYSCALLS=function(){abort("'SYSCALLS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"syscallMmap2")||(Module.syscallMmap2=function(){abort("'syscallMmap2' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"syscallMunmap")||(Module.syscallMunmap=function(){abort("'syscallMunmap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"JSEvents")||(Module.JSEvents=function(){abort("'JSEvents' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"specialHTMLTargets")||(Module.specialHTMLTargets=function(){abort("'specialHTMLTargets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"demangle")||(Module.demangle=function(){abort("'demangle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"demangleAll")||(Module.demangleAll=function(){abort("'demangleAll' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"jsStackTrace")||(Module.jsStackTrace=function(){abort("'jsStackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stackTrace")||(Module.stackTrace=function(){abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"getEnvStrings")||(Module.getEnvStrings=function(){abort("'getEnvStrings' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeI53ToI64")||(Module.writeI53ToI64=function(){abort("'writeI53ToI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeI53ToI64Clamped")||(Module.writeI53ToI64Clamped=function(){abort("'writeI53ToI64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeI53ToI64Signaling")||(Module.writeI53ToI64Signaling=function(){abort("'writeI53ToI64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeI53ToU64Clamped")||(Module.writeI53ToU64Clamped=function(){abort("'writeI53ToU64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"writeI53ToU64Signaling")||(Module.writeI53ToU64Signaling=function(){abort("'writeI53ToU64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"readI53FromI64")||(Module.readI53FromI64=function(){abort("'readI53FromI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"readI53FromU64")||(Module.readI53FromU64=function(){abort("'readI53FromU64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"convertI32PairToI53")||(Module.convertI32PairToI53=function(){abort("'convertI32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"convertU32PairToI53")||(Module.convertU32PairToI53=function(){abort("'convertU32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"Browser")||(Module.Browser=function(){abort("'Browser' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"FS")||(Module.FS=function(){abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"MEMFS")||(Module.MEMFS=function(){abort("'MEMFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"TTY")||(Module.TTY=function(){abort("'TTY' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"PIPEFS")||(Module.PIPEFS=function(){abort("'PIPEFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"SOCKFS")||(Module.SOCKFS=function(){abort("'SOCKFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"GL")||(Module.GL=function(){abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"emscriptenWebGLGet")||(Module.emscriptenWebGLGet=function(){abort("'emscriptenWebGLGet' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"emscriptenWebGLGetTexPixelData")||(Module.emscriptenWebGLGetTexPixelData=function(){abort("'emscriptenWebGLGetTexPixelData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"emscriptenWebGLGetUniform")||(Module.emscriptenWebGLGetUniform=function(){abort("'emscriptenWebGLGetUniform' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"emscriptenWebGLGetVertexAttrib")||(Module.emscriptenWebGLGetVertexAttrib=function(){abort("'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"AL")||(Module.AL=function(){abort("'AL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"SDL_unicode")||(Module.SDL_unicode=function(){abort("'SDL_unicode' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"SDL_ttfContext")||(Module.SDL_ttfContext=function(){abort("'SDL_ttfContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"SDL_audio")||(Module.SDL_audio=function(){abort("'SDL_audio' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"SDL")||(Module.SDL=function(){abort("'SDL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"SDL_gfx")||(Module.SDL_gfx=function(){abort("'SDL_gfx' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"GLUT")||(Module.GLUT=function(){abort("'GLUT' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"EGL")||(Module.EGL=function(){abort("'EGL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"GLFW_Window")||(Module.GLFW_Window=function(){abort("'GLFW_Window' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"GLFW")||(Module.GLFW=function(){abort("'GLFW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"GLEW")||(Module.GLEW=function(){abort("'GLEW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"IDBStore")||(Module.IDBStore=function(){abort("'IDBStore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"runAndAbortIfError")||(Module.runAndAbortIfError=function(){abort("'runAndAbortIfError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"warnOnce")||(Module.warnOnce=function(){abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stackSave")||(Module.stackSave=function(){abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stackRestore")||(Module.stackRestore=function(){abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stackAlloc")||(Module.stackAlloc=function(){abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"AsciiToString")||(Module.AsciiToString=function(){abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stringToAscii")||(Module.stringToAscii=function(){abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"UTF16ToString")||(Module.UTF16ToString=function(){abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stringToUTF16")||(Module.stringToUTF16=function(){abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"lengthBytesUTF16")||(Module.lengthBytesUTF16=function(){abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"UTF32ToString")||(Module.UTF32ToString=function(){abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"stringToUTF32")||(Module.stringToUTF32=function(){abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"lengthBytesUTF32")||(Module.lengthBytesUTF32=function(){abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"allocateUTF8")||(Module.allocateUTF8=function(){abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(Module,"allocateUTF8OnStack")||(Module.allocateUTF8OnStack=function(){abort("'allocateUTF8OnStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Module.writeStackCookie=writeStackCookie,Module.checkStackCookie=checkStackCookie,Module.abortStackOverflow=abortStackOverflow,Object.getOwnPropertyDescriptor(Module,"ALLOC_NORMAL")||Object.defineProperty(Module,"ALLOC_NORMAL",{configurable:!0,get:function(){abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}}),Object.getOwnPropertyDescriptor(Module,"ALLOC_STACK")||Object.defineProperty(Module,"ALLOC_STACK",{configurable:!0,get:function(){abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}}),Object.getOwnPropertyDescriptor(Module,"ALLOC_DYNAMIC")||Object.defineProperty(Module,"ALLOC_DYNAMIC",{configurable:!0,get:function(){abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}}),Object.getOwnPropertyDescriptor(Module,"ALLOC_NONE")||Object.defineProperty(Module,"ALLOC_NONE",{configurable:!0,get:function(){abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});var calledMain=!1;function run(e){function t(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT||(initRuntime(),preMain(),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),assert(!Module._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),postRun()))}e=e||arguments_,runDependencies>0||(writeStackCookie(),preRun(),runDependencies>0||(Module.setStatus?(Module.setStatus("Running..."),setTimeout((function(){setTimeout((function(){Module.setStatus("")}),1),t()}),1)):t(),checkStackCookie()))}function checkUnflushedContent(){var e=out,t=err,i=!1;out=err=function(e){i=!0};try{var r=Module._fflush;r&&r(0),["stdout","stderr"].forEach((function(e){var t=FS.analyzePath("/dev/"+e);if(t){var r=t.object.rdev,n=TTY.ttys[r];n&&n.output&&n.output.length&&(i=!0)}}))}catch(e){}out=e,err=t,i&&warnOnce("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.")}function exit(e,t){checkUnflushedContent(),t&&noExitRuntime&&0===e||(noExitRuntime?t||err("program exited (with status: "+e+"), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)"):(ABORT=!0,EXITSTATUS=e,exitRuntime(),Module.onExit&&Module.onExit(e)),quit_(e,new ExitStatus(e)))}if(dependenciesFulfilled=function e(){calledRun||run(),calledRun||(dependenciesFulfilled=e)},Module.run=run,Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);Module.preInit.length>0;)Module.preInit.pop()();noExitRuntime=!0,run();